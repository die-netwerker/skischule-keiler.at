const e=`{% block sw_shopware_updates_requirements %} <mt-card position-identifier="sw-shopware-updates-requirements" :title="$t('sw-settings-shopware-updates.cards.requirements')" :is-loading="isLoading" > <template #grid> <sw-data-grid :show-actions="false" :show-selection="false" :columns="columns" :data-source="requirements" > {% block sw_shopware_updates_requirements_column_result %} <template #column-result="{ item, isInlineEdit }" > <template v-if="item.result"> <sw-color-badge variant="success" :rounded="true" />&nbsp; {{ $t('sw-settings-shopware-updates.requirements.ready') }} </template> <template v-else> <sw-color-badge variant="error" :rounded="true" />&nbsp; {{ $t('sw-settings-shopware-updates.requirements.notReady') }} </template> </template> {% endblock %} {% block sw_shopware_updates_requirements_column_message %} <template #column-message="{ item, isInlineEdit }" > <span v-html="$t('sw-settings-shopware-updates.requirements.message.' + item.message, item.vars)"></span> </template> {% endblock %} </sw-data-grid> </template> </mt-card> {% endblock %}`,t=Shopware.Component.wrapComponentConfig({template:e,props:{updateInfo:{type:Object,required:!0,default:()=>{}},requirements:{type:Array,required:!0,default:()=>[]},isLoading:{type:Boolean}},data(){return{columns:[{property:"message",label:this.$t("sw-settings-shopware-updates.requirements.columns.message"),rawData:!0},{property:"result",label:this.$t("sw-settings-shopware-updates.requirements.columns.status"),rawData:!0}]}}});export{t as default};
