const m=`{% block sw_cms_element_image_slider_config %} <div class="sw-cms-el-config-image-slider"> {% block sw_cms_element_image_slider_config_tabs %} <sw-tabs position-identifier="sw-cms-element-config-image-slider" class="sw-cms-el-config-image-slider__tabs" default-item="content" > <template #default="{ active }"> {% block sw_cms_element_image_slider_config_tab_content %} <sw-tabs-item :title="$t('sw-cms.elements.general.config.tab.content')" name="content" :active-tab="active" > {{ $t('sw-cms.elements.general.config.tab.content') }} </sw-tabs-item> {% endblock %} {% block sw_cms_element_image_slider_config_tab_options %} <sw-tabs-item :title="$t('sw-cms.elements.general.config.tab.settings')" name="settings" :active-tab="active" > {{ $t('sw-cms.elements.general.config.tab.settings') }} </sw-tabs-item> {% endblock %} </template> <template #content="{ active }" > {% block sw_cms_element_image_slider_config_content %} <sw-container v-if="active === 'content'" class="sw-cms-el-config-image-slider__tab-content" > {% block sw_cms_element_image_slider_config_media_selection %} <sw-media-list-selection-v2 :entity-media-items="mediaItems" :entity="entity" :upload-tag="uploadTag" :default-folder-name="defaultFolderName" @upload-finish="onImageUpload" @item-remove="onItemRemove" @open-sidebar="onOpenMediaModal" @item-sort="onItemSort" /> {% endblock %} {% block sw_cms_element_image_slider_config_media_modal %} <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$t('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onItemRemove" @media-modal-selection-change="onMediaSelectionChange" @modal-close="onCloseMediaModal" /> {% endblock %} </sw-container> {% endblock %} {% block sw_cms_element_image_slider_config_settings %} <sw-container v-if="active === 'settings'" class="sw-cms-el-config-image-slider__tab-settings" > <div class="sw-cms-el-config-image-slider__settings-options"> {% block sw_cms_element_image_slider_config_settings_display_mode %} {# @deprecated tag:v6.8.0 - Block will be removed. Use \`sw_cms_element_image_slider_config_settings_display_mode\` instead. #} {% block sw_cms_element_image_gallery_config_settings_display_mode %} <div class="sw-cms-el-config-image-slider__setting-option"> {% block sw_cms_element_image_slider_config_settings_display_mode_select %} {# @deprecated tag:v6.8.0 - Block will be removed. Use \`sw_cms_element_image_slider_config_settings_display_mode_select\` instead. #} {% block sw_cms_element_image_gallery_config_settings_display_mode_select %} <mt-select v-model="element.config.displayMode.value" class="sw-cms-el-config-image-slider__setting-display-mode" :label="$t('sw-cms.elements.general.config.label.displayMode')" :help-text="$t('sw-cms.elements.imageSlider.config.helpText.displayMode')" :options="displayModeValueOptions" @update:model-value="onChangeDisplayMode" /> {% endblock %} {% endblock %} {% block sw_cms_element_image_slider_config_settings_min_height %} {# @deprecated tag:v6.8.0 - Block will be removed. Use \`sw_cms_element_image_slider_config_settings_min_height\` instead. #} {% block sw_cms_element_image_gallery_config_settings_min_height %} <mt-text-field v-model="element.config.minHeight.value" :label="$t('sw-cms.elements.image.config.label.minHeight')" :placeholder="$t('sw-cms.elements.image.config.label.minHeight')" :help-text="$t('sw-cms.elements.image.config.label.minHeightHelpText')" :disabled="element.config.displayMode.value !== 'cover'" @update:model-value="onChangeMinHeight" /> {% endblock %} {% endblock %} {% block sw_cms_element_image_slider_config_settings_vertical_align %} {# @deprecated tag:v6.8.0 - Block will be removed. Use \`sw_cms_element_image_slider_config_settings_vertical_align\` instead. #} {% block sw_cms_element_image_gallery_config_settings_vertical_align %} <mt-select v-model="element.config.verticalAlign.value" :label="$t('sw-cms.elements.general.config.label.verticalAlign')" :placeholder="$t('sw-cms.elements.general.config.label.verticalAlign')" :disabled="element.config.displayMode.value === 'cover'" :options="verticalAlignValueOptions" /> {% endblock %} {% endblock %} </div> {% endblock %} {% endblock %} {% block sw_cms_element_image_slider_config_settings_navigation %} <div class="sw-cms-el-config-image-slider__setting-navigations sw-cms-el-config-image-slider__setting-option"> <div class="sw-cms-el-config-image-slider__settings-navigation"> {% block sw_cms_element_image_slider_config_settings_navigation_arrow_position %} <mt-select v-model="element.config.navigationArrows.value" :label="$t('sw-cms.elements.imageSlider.config.label.navigationArrows')" :options="navigationArrowsValueOptions" @update:model-value="emitUpdateEl" /> {% endblock %} </div> <div class="sw-cms-el-config-image-slider__settings-navigation"> {% block sw_cms_element_image_slider_config_settings_navigation_dots_position %} <mt-select v-model="element.config.navigationDots.value" :label="$t('sw-cms.elements.imageSlider.config.label.navigationDots')" :options="navigationDotsValueOptions" @update:model-value="emitUpdateEl" /> {% endblock %} </div> </div> {% endblock %} <div class="sw-cms-el-config-image-slider__setting-speed"> {% block sw_cms_element_image_slider_config_settings_speed %} <mt-number-field v-model="element.config.speed.value" class="sw-cms-el-config-image-slider__setting-speed-slide" number-type="int" :min="0" :max="3600000" :label="$t('sw-cms.elements.general.config.label.speed')" :placeholder="$t('sw-cms.elements.general.config.label.speed')" :help-text="$t('sw-cms.elements.general.config.helpText.speed')" /> {% endblock %} </div> <mt-banner class="sw-cms-el-config-image-slider__setting-auto-slide" variant="attention" :title="$t('sw-cms.elements.general.config.infoText.autoSlideTitle')" > <p class="sw-cms-el-config-image-slider__setting-auto-slide-attention"> {{ $t('sw-cms.elements.general.config.infoText.autoSlide') }} </p> <div class="sw-cms-el-config-image-slider__setting-auto-slide-container sw-cms-el-config-image-slider__setting-option"> <div class="sw-cms-el-config-image-slider__setting-auto-slide-switch"> {% block sw_cms_element_image_slider_config_settings_auto_slide %} <mt-switch v-model="element.config.autoSlide.value" class="sw-cms-el-config-image-slider__setting-auto-slide" :label="$t('sw-cms.elements.general.config.label.autoSlide')" bordered @update:model-value="onChangeAutoSlide" /> {% endblock %} </div> <div class="sw-cms-el-config-image-slider__setting-auto-slide-delay"> {% block sw_cms_element_image_slider_config_settings_autoplay_timeout %} <mt-number-field v-model="element.config.autoplayTimeout.value" class="sw-cms-el-config-image-slider__setting-delay-slide" number-type="int" :min="0" :max="3600000" :label="$t('sw-cms.elements.general.config.label.autoplayTimeout')" :placeholder="$t('sw-cms.elements.general.config.label.autoplayTimeout')" :help-text="$t('sw-cms.elements.general.config.helpText.autoplayTimeout')" /> {% endblock %} </div> </div> </mt-banner> {% block sw_cms_element_image_slider_config_settings_links %} <div class="sw-cms-el-config-image-slider__settings-links sw-cms-el-config-image-slider__setting-option"> <div v-for="(sliderItem, index) in items" :key="index" class="sw-cms-el-config-image-slider__settings-link" > {% block sw_cms_element_image_slider_config_settings_link_url %} <sw-container :key="sliderItem.mediaId" class="sw-cms-el-config-image-slider__settings-link-container" > <img v-if="sliderItem.mediaUrl" class="sw-cms-el-config-image-slider__settings-link-prefix" :src="sliderItem.mediaUrl" alt="" > <mt-url-field v-model="sliderItem.url" class="sw-cms-el-config-image-slider__settings-link-input" :name="sliderItem.mediaUrl" :label="$t('sw-cms.elements.image.config.label.linkTo')" :placeholder="$t('sw-cms.elements.image.config.placeholder.enterUrl')" /> </sw-container> {% endblock %} {% block sw_cms_element_image_slider_config_settings_link_aria_label %} <mt-text-field v-model="sliderItem.ariaLabel" class="sw-cms-el-config-image-slider__settings-link-aria-label" :name="sliderItem.ariaLabel" :label="$t('sw-cms.elements.image.config.label.ariaLabel')" :help-text="$t('sw-cms.elements.image.config.label.ariaLabelHelpText')" /> {% endblock %} {% block sw_cms_element_image_slider_config_settings_link_target %} <mt-switch v-model="sliderItem.newTab" class="sw-cms-el-config-image-slider__settings-link-tab" :name="sliderItem.mediaId" :label="$t('sw-cms.elements.image.config.label.linkNewTab')" bordered /> {% endblock %} </div> </div> {% endblock %} <mt-switch class="sw-cms-el-config-image-slider__settings-is-decorative" :model-value="element.config.isDecorative.value" :label="$t('sw-cms.elements.image.config.label.isDecorative')" :help-text="$t('sw-cms.elements.image.config.label.isDecorativeHelpText')" bordered @update:model-value="onChangeIsDecorative" /> {% block sw_cms_element_image_slider_config_settings_use_fetch_priority_on_first_item %} <mt-switch class="sw-cms-el-config-image-slider__settings-use-fetch-priority-on-first-item" :model-value="element.config.useFetchPriorityOnFirstItem.value" :label="$t('sw-cms.elements.image.config.label.useFetchPriorityOnFirstItem')" :help-text="$t('sw-cms.elements.image.config.label.useFetchPriorityOnFirstItemHelpText')" bordered @update:model-value="onChangeUseFetchPriorityOnFirstItem" /> {% endblock %} </div> </sw-container> {% endblock %} </template> </sw-tabs> {% endblock %} </div> {% endblock %}`,{Mixin:o}=Shopware,{moveItem:a,object:{cloneDeep:c}}=Shopware.Utils,d=Shopware.Data.Criteria,g={template:m,inject:["repositoryFactory"],emits:["element-update"],mixins:[o.getByName("cms-element")],data(){return{mediaModalIsOpen:!1,initialFolderId:null,entity:this.element,mediaItems:[],showSlideConfig:!1}},computed:{uploadTag(){return`cms-element-media-config-${this.element.id}`},mediaRepository(){return this.repositoryFactory.create("media")},defaultFolderName(){return this.cmsPageState.pageEntityName},items(){return this.element.config&&this.element.config.sliderItems&&this.element.config.sliderItems.value?this.element.config.sliderItems.value:[]},speedDefault(){return this.cmsService.getCmsElementConfigByName("image-slider").defaultConfig.speed.value},autoplayTimeoutDefault(){return this.cmsService.getCmsElementConfigByName("image-slider").defaultConfig.autoplayTimeout.value},displayModeValueOptions(){return[{value:"standard",label:this.$tc("sw-cms.elements.general.config.label.displayModeStandard")},{value:"contain",label:this.$tc("sw-cms.elements.general.config.label.displayModeContain")},{value:"cover",label:this.$tc("sw-cms.elements.general.config.label.displayModeCover")}]},verticalAlignValueOptions(){return[{value:"flex-start",label:this.$tc("sw-cms.elements.general.config.label.verticalAlignTop")},{value:"center",label:this.$tc("sw-cms.elements.general.config.label.verticalAlignCenter")},{value:"flex-end",label:this.$tc("sw-cms.elements.general.config.label.verticalAlignBottom")}]},navigationArrowsValueOptions(){return[{value:"none",label:this.$tc("sw-cms.elements.imageSlider.config.label.navigationPositionNone")},{value:"inside",label:this.$tc("sw-cms.elements.imageSlider.config.label.navigationPositionInside")},{value:"outside",label:this.$tc("sw-cms.elements.imageSlider.config.label.navigationPositionOutside")}]},navigationDotsValueOptions(){return[{value:"none",label:this.$tc("sw-cms.elements.imageSlider.config.label.navigationPositionNone")},{value:"inside",label:this.$tc("-cms.elements.imageSlider.config.label.navigationPositionInside")},{value:"outside",label:this.$tc("sw-cms.elements.imageSlider.config.label.navigationPositionOutside")}]}},created(){this.createdComponent()},methods:{async createdComponent(){var e;if(this.initElementConfig("image-slider"),(e=this.element.config.autoSlide)!=null&&e.value&&(this.showSlideConfig=!0),this.element.config.sliderItems.source!=="default"&&this.element.config.sliderItems.value.length>0){const i=this.element.config.sliderItems.value.map(l=>l.mediaId),t=new d(1,25);t.setIds(i);const s=await this.mediaRepository.search(t);this.mediaItems=i.map(l=>s.get(l)).filter(l=>l!==null),this.element.config.sliderItems.value.forEach((l,n)=>{s.get(l.mediaId)===null&&this.onItemRemove({id:l.mediaId},n)})}},onImageUpload(e){const i=this.element.config.sliderItems;i.source==="default"&&(i.value=[],i.source="static"),this.mediaItems.find(s=>s.id===e.id)&&(this.mediaItems=this.mediaItems.filter(s=>s.id!==e.id),i.value=i.value.filter(s=>s.mediaId!==e.id)),i.value.push({mediaUrl:e.url,mediaId:e.id,ariaLabel:null,url:null,newTab:!1}),this.mediaItems.push(e),this.updateMediaDataValue(),this.emitUpdateEl()},onItemRemove(e,i){const t=e.id,{value:s}=this.element.config.sliderItems;this.element.config.sliderItems.value=s.filter((l,n)=>l.mediaId!==t||n!==i),this.mediaItems=this.mediaItems.filter((l,n)=>l.id!==t||n!==i),this.updateMediaDataValue(),this.emitUpdateEl()},onCloseMediaModal(){this.mediaModalIsOpen=!1},onMediaSelectionChange(e){const i=this.element.config.sliderItems;i.source==="default"&&(i.value=[],i.source="static"),e.forEach(t=>{this.element.config.sliderItems.value.push({mediaUrl:t.url,mediaId:t.id,ariaLabel:null,url:null,newTab:!1})}),this.mediaItems.push(...e),this.updateMediaDataValue(),this.emitUpdateEl()},onItemSort(e,i){a(this.mediaItems,e.position,i.position),a(this.element.config.sliderItems.value,e.position,i.position),this.updateMediaDataValue(),this.emitUpdateEl()},updateMediaDataValue(){if(this.element.config.sliderItems.value){const e=c(this.element.config.sliderItems.value);if(e.forEach(i=>{this.mediaItems.forEach(t=>{i.mediaId===t.id&&(i.media=t)})}),!this.element.data){this.element.data={sliderItems:e};return}this.element.data.sliderItems=e}},onOpenMediaModal(){this.mediaModalIsOpen=!0},onChangeMinHeight(e){this.element.config.minHeight.value=e===null?"":e,this.$emit("element-update",this.element)},onChangeAutoSlide(e){this.showSlideConfig=e,e||(this.element.config.autoplayTimeout.value=this.autoplayTimeoutDefault,this.element.config.speed.value=this.speedDefault)},onChangeDisplayMode(e){e==="cover"&&(this.element.config.verticalAlign.value=null),this.$emit("element-update",this.element)},emitUpdateEl(){this.$emit("element-update",this.element)},onChangeIsDecorative(e){this.element.config.isDecorative.value=e,this.$emit("element-update",this.element)},onChangeUseFetchPriorityOnFirstItem(e){this.element.config.useFetchPriorityOnFirstItem.value=e,this.$emit("element-update",this.element)}}};export{g as default};
