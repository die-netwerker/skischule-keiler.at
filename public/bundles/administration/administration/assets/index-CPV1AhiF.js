const i=`{% block sw_sales_channel_product_assignment_categories %} <div class="sw-sales-channel-product-assignment-categories"> {% block sw_sales_channel_product_assignment_categories_info %} <mt-banner ref="alert"> {{ $tc('sw-sales-channel.detail.productAssignmentModal.categories.textInfo') }} </mt-banner> {% endblock %} {% block sw_sales_channel_product_assignment_categories_content %} <mt-card :is-loading="!isComponentReady || isProductLoading" position-identifier="sw-sales-channel-product-assignment-categories" > <div :style="containerStyle"> {% block sw_sales_channel_products_assignment_single_products_secondary %} <sw-card-section ref="cardSectionSecondary" secondary divider="bottom" > {% block sw_sales_channel_product_assignment_categories_search_field %} <sw-simple-search-field :value="searchTerm" variant="form" size="small" :placeholder="$tc('sw-sales-channel.detail.productAssignmentModal.categories.textSearch')" @search-term-change="onSearchTermChange" /> {% endblock %} </sw-card-section> {% endblock %} {% block sw_sales_channel_product_assignment_categories_tree %} {% block sw_sales_channel_product_assignment_categories_tree_result %} <sw-tree v-if="searchTerm.length <= 0 && categories.length > 0" ref="swTree" after-id-property="afterCategoryId" :items="categories" :sortable="false" @get-tree-items="getTreeItems" > {% block sw_sales_channel_product_assignment_categories_tree_headline %} <template #headline> <span></span> </template> {% endblock %} {% block sw_sales_channel_product_assignment_categories_tree_search %} <template #search> <span></span> </template> {% endblock %} {% block sw_sales_channel_product_assignment_categories_tree_items %} <template #items="{ treeItems, draggedItem, translationContext }" > {% block ssw_sales_channel_product_assignment_categories_tree_item %} <sw-tree-item v-for="item in treeItems" :key="item.id" :item="item" :translation-context="translationContext" :dragged-item="draggedItem" :active-parent-ids="selectedCategoriesPathIds" :active-item-ids="selectedCategoriesItemsIds" :sortable="false" :mark-inactive="true" @check-item="onCheckItem" > {% block sw_sales_channel_product_assignment_categories_tree_item_actions %} <template #actions> <span></span> </template> {% endblock %} </sw-tree-item> {% endblock %} </template> {% endblock %} </sw-tree> {% endblock %} {% block sw_sales_channel_product_assignment_categories_search_results %} <ul v-else-if="searchResult.length > 0 && searchTerm.length > 0" class="sw-sales-channel-product-assignment-categories__search-results" > {% block sw_sales_channel_product_assignment_categories_search_results_item %} <li v-for="item in searchResult" :key="item.id" class="sw-sales-channel-product-assignment-categories__search-result" role="option" tabindex="0" :aria-selected="isSearchItemChecked(item.id)" @click.stop="onCheckSearchItem(item)" @keydown.enter="onCheckSearchItem(item)" > {% block sw_sales_channel_product_assignment_categories_search_results_item_checkbox %} <mt-checkbox class="sw-sales-channel-product-assignment-categories__search-results-checkbox" :checked="isSearchItemChecked(item.id)" /> {% endblock %} {% block sw_sales_channel_product_assignment_categories_search_results_item_folder %} <div v-if="item.childCount > 0" class="sw-sales-channel-product-assignment-categories__search-results-icon" > {% block sw_sales_channel_product_assignment_categories_search_results_item_folder_icon %} <mt-icon name="regular-folder" size="16px" /> {% endblock %} </div> {% endblock %} {% block sw_category_tree_field_input_results_search_results_item_endpoint %} <div v-else class="sw-sales-channel-product-assignment-categories__search-results-icon" > {% block sw_category_tree_field_input_results_search_results_item_endpoint_icon %} <mt-icon name="regular-circle-xxs" size="18" /> {% endblock %} </div> {% endblock %} {% block sw_sales_channel_product_assignment_categories_search_results_item_name %} <span class="sw-sales-channel-product-assignment-categories__search-results-name"> {% block sw_category_tree_field_input_results_search_results_item_name_highlight %} <sw-highlight-text :search-term="searchTerm" :text="getBreadcrumb(item)" /> {% endblock %} </span> {% endblock %} </li> {% endblock %} </ul> {% endblock %} {% block sw_sales_channel_product_assignment_categories_search_results_empty %} <sw-empty-state v-else :show-description="false" :absolute="false" :title="$tc('sw-sales-channel.detail.productAssignmentModal.categories.emptySearchResults')" :icon="'regular-products'" class="sw-sales-channel-product-assignment-categories__empty-state" /> {% endblock %} {% endblock %} </div> </mt-card> {% endblock %} </div> {% endblock %}`,{Context:r,Mixin:n}=Shopware,{EntityCollection:o,Criteria:s}=Shopware.Data,l={template:i,inject:["repositoryFactory"],emits:["selection-change","product-loading"],mixins:[n.getByName("notification")],props:{salesChannel:{type:Object,required:!0},containerStyle:{type:Object,required:!0}},data(){return{categories:[],searchResult:[],searchTerm:"",isFetching:!1,isProductLoading:!1,isComponentReady:!1,categoriesCollection:[]}},computed:{categoryRepository(){return this.repositoryFactory.create("category")},productRepository(){return this.repositoryFactory.create("product")},selectedCategoriesItemsIds(){return this.categoriesCollection.getIds()},selectedCategoriesPathIds(){return this.categoriesCollection.reduce((e,t)=>{const a=t.path?t.path.split("|").filter(c=>c.length>0):"";return[...e,...a]},[])}},watch:{categoriesCollection:{handler(e){if(!e||!e.getIds().length){this.$emit("selection-change",[],"categoryProducts");return}this.$emit("product-loading",!0),this.isProductLoading=!0,this.getProductFromCategories(e.getIds()).then(t=>{this.$emit("selection-change",t,"categoryProducts")}).catch(t=>{this.createNotificationError({message:t.message})}).finally(()=>{this.$emit("product-loading",!1),this.isProductLoading=!1})},deep:!0}},created(){this.createdComponent()},methods:{onSearchTermChange(e){this.searchTerm=e,!(e.length<=0)&&this.searchCategories(e).then(t=>{this.searchResult=t})},createdComponent(){this.categoriesCollection=new o(this.categoryRepository.route,this.categoryRepository.entityName,r.api),this.getTreeItems().then(()=>{this.isComponentReady=!0})},categoryCriteria(e){const t=new s(1,500);return t.addFilter(s.multi("AND",[s.equals("parentId",e),s.multi("OR",[s.equals("type","page"),s.equals("type","folder")])])),t},categorySearchCriteria(e){const t=new s(1,500);return t.addFilter(s.equals("type","page")),t.setTerm(e),t},getTreeItems(e=null){return this.isFetching=!0,this.categoryRepository.search(this.categoryCriteria(e),r.api).then(t=>e===null?(this.categories=t,Promise.resolve()):(t.forEach(a=>{this.categories.add(a)}),Promise.resolve())).catch(t=>{this.createNotificationError({message:t.message})}).finally(()=>{this.isFetching=!1})},onChangeSearchTerm(e){this.searchTerm=e},onCheckItem(e){const t=this.categoriesCollection.has(e.id);return e.checked&&!t?(e.data?this.categoriesCollection.add(e.data):this.categoriesCollection.add(e),!0):(this.removeItem(e),!1)},removeItem(e){this.categoriesCollection.remove(e.id)},searchCategories(e){return this.categoryRepository.search(this.categorySearchCriteria(e),Shopware.Context.api)},isSearchItemChecked(e){return this.selectedCategoriesItemsIds.length>0?this.selectedCategoriesItemsIds.indexOf(e)>=0:!1},onCheckSearchItem(e){const t=!this.isSearchItemChecked(e.id);this.onCheckItem({checked:t,id:e.id,data:e})},getBreadcrumb(e){return e.breadcrumb?e.breadcrumb.join(" / "):e.translated.name||e.name},productCriteria(e){const t=new s(1,500);return t.addFilter(s.multi("AND",[s.equalsAny("categoryIds",e),s.equals("parentId",null),s.not("and",[s.equals("product.visibilities.salesChannelId",this.salesChannel.id)])])),t},getProductFromCategories(e){return this.productRepository.search(this.productCriteria(e),Shopware.Context.api)}}};export{l as default};
