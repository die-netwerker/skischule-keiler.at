const i=`<sw-modal :title="$tc('sw-users-permissions.sso.modal.title')" v-bind="$attrs" @modal-close="closeModal()" > <template #default> <mt-text-field v-model="email" class="sw-users-permissions-sso-modal-field-email" :label="$tc('sw-users-permissions.sso.modal.labelEmail')" :placeholder="$tc('sw-users-permissions.sso.modal.placeholderEmail')" :error="errors.errorEmail" /> <sw-single-select v-model:value="languageId" class="sw-users-permissions-sso-modal-field-language" :options="languages" label-property="name" value-property="id" :label="$tc('sw-users-permissions.sso.modal.labelLanguage')" :placeholder="$tc('sw-users-permissions.sso.modal.placeholderLanguage')" :error="errors.errorLanguage" /> <mt-banner variant="info"> {{ $tc('sw-users-permissions.sso.modal.accountPermissionHint') }} </mt-banner> </template> <template #modal-footer> <mt-button class="sw-users-permissions-sso-modal-close-button" variant="secondary" :disabled="isLoading" @click="closeModal()" > {{ $tc('global.default.cancel') }} </mt-button> <mt-button variant="primary" class="sw-users-permissions-sso-modal-save-button" :disabled="hasError" :is-loading="isLoading" @click="sendInvitation" > {{ $tc('sw-users-permissions.sso.modal.labelButtonInvite') }} </mt-button> </template> </sw-modal>`,{Data:{Criteria:s}}=Shopware,{ShopwareError:r}=Shopware.Classes,t={name:"sw-user-sso-invitation-modal",template:i,emits:["user-invited","invitation-failed","modal-close"],data(){return{email:"",languageId:null,languages:[],errors:{errorEmail:null,errorLanguage:null},isLoading:!1}},computed:{invitationService(){return Shopware.Service("ssoInvitationService")},languageRepository(){return Shopware.Service("repositoryFactory").create("language")},languageCriteria(){const a=Array.from(Shopware.Locale.getLocaleRegistry().keys()),e=new s;return e.addFilter(s.equalsAny("locale.code",a)),e},hasError(){return this.errors.errorEmail!==null||this.errors.errorLanguage!==null}},watch:{email(){this.validateEmail()},languageId(){this.validateLanguage()}},created(){this.componentCreated()},methods:{componentCreated(){return this.loadLanguages()},async loadLanguages(){this.languages=await this.languageRepository.search(this.languageCriteria,Shopware.Context.api)},async sendInvitation(){if(this.isLoading=!0,this.validateEmail(),this.validateLanguage(),this.hasError){this.isLoading=!1;return}const a=this.languages.get(this.languageId).localeId;try{await this.invitationService.inviteUser(this.email,a),this.$emit("user-invited"),this.closeModal()}catch(e){this.$emit("invitation-failed",e)}finally{this.isLoading=!1}},closeModal(){this.email="",this.$emit("modal-close")},validateEmail(){if(!/[\w.%+-]+@[\w.-]+\.[\w]{2,}/.test(this.email)){this.errors.errorEmail=new r({code:"bd79c0ab-ddba-46cc-a703-a7a4b08de310"});return}this.errors.errorEmail=null},validateLanguage(){if(this.languageId===null){this.errors.errorLanguage=new r({code:"c1051bb4-d103-4f74-8988-acbcafc7fdc3"});return}this.errors.errorLanguage=null}}};export{t as default};
