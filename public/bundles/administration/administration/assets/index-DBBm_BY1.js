const n=`{% block sw_sales_channel_products_assignment_single_products %} <mt-card class="sw-sales-channel-products-assignment-single-products" position-identifier="sw-sales-channel-products-assignment-single-products" :is-loading="isLoading" > <div :style="containerStyle"> {% block sw_sales_channel_products_assignment_single_products_secondary %} <sw-card-section ref="cardSectionSecondary" secondary > {% block sw_sales_channel_products_assignment_single_products_search_field %} <sw-simple-search-field v-model:value="searchTerm" variant="form" size="small" @search-term-change="onChangeSearchTerm" /> {% endblock %} </sw-card-section> {% endblock %} {% block sw_sales_channel_products_assignment_single_products_primary %} <sw-card-section class="sw-sales-channel-products-assignment-single-products__card-section-primary" divider="top" > {% block sw_sales_channel_products_assignment_single_products_primary_listing %} <sw-entity-listing v-if="products.length > 0" identifier="sw-sales-channel-products-assignment-single-products-list" :repository="productRepository" :items="products" :columns="productColumns" :plain-appearance="true" :skeleton-item-amount="limit" :is-loading="isLoading" :allow-column-edit="false" :allow-inline-edit="false" :allow-delete="false" :show-actions="false" :show-settings="false" @selection-change="onSelectionChange" @select-item="onSelectionChange" @select-all-items="onSelectionChange" > <template #pagination> {% block sw_sales_channel_products_assignment_single_products_primary_listing_pagination %} <sw-pagination v-bind="{ page, limit, total }" :total-visible="3" :auto-hide="false" @page-change="onChangePage" /> {% endblock %} </template> </sw-entity-listing> {% endblock %} {% block sw_sales_channel_products_assignment_single_products_primary_empty_state %} <sw-empty-state v-else :show-description="false" :title="$tc('sw-sales-channel.detail.products.titleEmptyState')" > <template #icon> <img :src="assetFilter('/administration/administration/static/img/empty-states/products-empty-state.svg')" :alt="$tc('sw-sales-channel.detail.products.titleEmptyState')" > </template> </sw-empty-state> {% endblock %} </sw-card-section> {% endblock %} </div> </mt-card> {% endblock %}`,{Mixin:o,Filter:r}=Shopware,{Criteria:t}=Shopware.Data,l={template:n,inject:["repositoryFactory"],emits:["selection-change"],mixins:[o.getByName("notification")],props:{salesChannel:{type:Object,required:!0},containerStyle:{type:Object,required:!0}},data(){return{products:[],searchTerm:null,isLoading:!1,page:1,limit:25,total:0}},computed:{productRepository(){return this.repositoryFactory.create("product")},productCriteria(){const e=new t(this.page,this.limit);return this.searchTerm&&e.setTerm(this.searchTerm),e.addAssociation("visibilities.salesChannel"),e.addFilter(t.not("and",[t.equals("product.visibilities.salesChannelId",this.salesChannel.id)])),e.addFilter(t.equals("parentId",null)),e},productColumns(){return[{property:"name",label:this.$tc("sw-sales-channel.detail.products.columnProductName"),allowResize:!0},{property:"productNumber",label:this.$tc("sw-sales-channel.detail.products.columnProductNumber"),allowResize:!0}]},assetFilter(){return r.getByName("asset")}},created(){this.getProducts()},methods:{getProducts(){return this.isLoading=!0,this.productRepository.search(this.productCriteria).then(e=>{this.products=e,this.total=e.total}).catch(e=>{this.products=[],this.total=0,this.createNotificationError({message:e.message})}).finally(()=>{this.isLoading=!1})},onChangeSearchTerm(e){this.searchTerm=e,e&&(this.page=1),this.getProducts()},onSelectionChange(e){const s=Object.values(e);this.$emit("selection-change",s,"singleProducts")},onChangePage(e){this.page=e.page,this.limit=e.limit,this.products.criteria.sortings.forEach(({field:s,naturalSorting:i,order:a})=>{this.productCriteria.addSorting(t.sort(s,a,i))}),this.getProducts()}}};export{l as default};
