const c=`{% block sw_settings_captcha_select_v2 %} <sw-container class="sw-settings-captcha-select-v2"> {% block sw_settings_captcha_select_v2_multi_select %} <sw-multi-select v-model:value="activeCaptchaSelect" v-bind="attributes" :options="availableCaptchas" /> {% endblock %} {% block sw_settings_captcha_select_v2_google_recaptcha_v2 %} <sw-container v-if="currentValue.googleReCaptchaV2.isActive" class="sw-settings-captcha-select-v2__google-recaptcha-v2" > {% block sw_settings_captcha_select_v2_google_recaptcha_v2_description %} <p class="sw-settings-captcha-select-v2__description sw-settings-captcha-select-v2__google-recaptcha-v2-description"> {{ $tc('sw-settings-basic-information.captcha.label.googleReCaptchaV2CheckboxDescription') }} </p> <p class="sw-settings-captcha-select-v2__description sw-settings-captcha-select-v2__google-recaptcha-v2-description"> {{ $tc('sw-settings-basic-information.captcha.label.googleReCaptchaV2InvisibleDescription') }} </p> {% endblock %} {% block sw_settings_captcha_select_v2_google_recaptcha_v2_site_key %} <mt-text-field v-model="currentValue.googleReCaptchaV2.config.siteKey" name="googleReCaptchaV2SiteKey" :label="$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV2SiteKey')" /> {% endblock %} {% block sw_settings_captcha_select_v2_google_recaptcha_v2_secret_key %} <mt-text-field v-model="currentValue.googleReCaptchaV2.config.secretKey" name="googleReCaptchaV2SecretKey" :label="$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV2SecretKey')" /> {% endblock %} {% block sw_settings_captcha_select_v2_google_recaptcha_v2_invisible %} <mt-switch v-model="currentValue.googleReCaptchaV2.config.invisible" bordered name="googleReCaptchaV2Invisible" :label="$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV2Invisible')" /> {% endblock %} </sw-container> {% endblock %} {% block sw_settings_captcha_select_v2_google_recaptcha_v3 %} <sw-container v-if="currentValue.googleReCaptchaV3.isActive" class="sw-settings-captcha-select-v2__google-recaptcha-v3" > {% block sw_settings_captcha_select_v2_google_recaptcha_v3_description %} <p class="sw-settings-captcha-select-v2__description sw-settings-captcha-select-v2__google-recaptcha-v3-description"> {{ $tc('sw-settings-basic-information.captcha.label.googleReCaptchaV3Description') }} </p> {% endblock %} {% block sw_settings_captcha_select_v2_google_recaptcha_v3_site_key %} <mt-text-field v-model="currentValue.googleReCaptchaV3.config.siteKey" name="googleReCaptchaV3SiteKey" :label="$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV3SiteKey')" /> {% endblock %} {% block sw_settings_captcha_select_v2_google_recaptcha_v3_secret_key %} <mt-text-field v-model="currentValue.googleReCaptchaV3.config.secretKey" name="googleReCaptchaV3SecretKey" :label="$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV3SecretKey')" /> {% endblock %} {% block sw_settings_captcha_select_v2_google_recaptcha_v3_threshold_score %} <mt-number-field v-model="currentValue.googleReCaptchaV3.config.thresholdScore" name="googleReCaptchaV3ThresholdScore" number-type="float" :min="0" :max="1" :step="0.1" :label="$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV3ThresholdScore')" :help-text="$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV3DescriptionThresholdScore')" /> {% endblock %} </sw-container> {% endblock %} {% block sw_settings_captcha_select_v2_basic_captcha_notice %} <sw-container v-if="currentValue.basicCaptcha.isActive"> <mt-banner variant="neutral" :title="$tc('sw-settings-basic-information.captcha.basicCaptchaNoticeTitle')" class="sw-settings-captcha-select-v2__basic-captcha-notice" > {{ $tc('sw-settings-basic-information.captcha.basicCaptchaNotice') }} </mt-banner> </sw-container> {% endblock %} </sw-container> {% endblock %}`,{Mixin:a}=Shopware,s={template:c,inject:["feature","captchaService"],emits:["update:value"],mixins:[a.getByName("sw-inline-snippet")],props:{value:{type:Object,required:!1,default:null}},data(){return{availableCaptchas:[]}},computed:{attributes(){return{...this.$attrs,...this.getTranslations()}},currentValue:{get(){return this.value},set(e){this.$emit("update:value",e)}},activeCaptchaSelect:{get(){const e=[];return Object.keys(this.currentValue).forEach(t=>{this.currentValue[t].isActive&&e.push(t)}),e},set(e){e!==this.activeCaptchaSelect&&Object.keys(this.currentValue).forEach(t=>{this.currentValue[t].isActive=e.includes(t)})}}},watch:{currentValue:{deep:!0,handler(e){this.$emit("update:value",e)}}},created(){this.createdComponent()},methods:{createdComponent(){this.captchaService.list(this.setCaptchaOptions)},setCaptchaOptions(e){this.availableCaptchas=e.map(t=>this.renderCaptchaOption(t))},renderCaptchaOption(e){return{label:this.$tc(`sw-settings-basic-information.captcha.label.${e}`),value:e}},getTranslations(){return["label","placeholder","helpText"].filter(e=>!!this.$attrs[e]).reduce((e,t)=>({...e,[t]:this.getInlineSnippet(this.$attrs[t])}),{})}}};export{s as default};
