const t='{# v-on="$listeners" needed becaues vue/compat removes them from $attrs #} {# New mt-text-field component #} {% block sw_text_field %} <mt-text-field v-if="!deprecated" v-bind="$attrs" :model-value="compatValue" @update:model-value="handleUpdateModelValue" > <template v-for="(index, name) in getSlots()" #[name]="data" > <slot :name="name" v-bind="data" > </slot> </template> <slot></slot> </mt-text-field> {% endblock %} {# Deprecated component #} <sw-text-field-deprecated v-else v-bind="$attrs" :value="value" > <template v-for="(_index, name) in getSlots()" #[name]="data" > <slot :name="name" v-bind="data || {}" > </slot> </template> </sw-text-field-deprecated>',a=Shopware.Component.wrapComponentConfig({template:t,props:{modelValue:{type:String,required:!1,default:null},value:{type:String,required:!1,default:null},deprecated:{type:Boolean,required:!1,default:!1}},computed:{compatValue:{get(){return this.value===null||this.value===void 0?this.modelValue:this.value},set(e){this.$emit("update:value",e),this.$emit("update:modelValue",e)}}},methods:{getSlots(){return this.$slots},handleUpdateModelValue(e){this.$emit("update:modelValue",e),this.$emit("update:value",e)}}});export{a as default};
