const i=`{% block sw_first_run_wizard_shopware_account %} <div class="sw-first-run-wizard-shopware-account"> <sw-container columns="1fr 1fr"> <img class="sw-first-run-wizard-shopware-account__illustration" :src="assetFilter('/administration/administration/static/img/first-run-wizard/shopware-account.svg')" alt="" > <div> <h5 class="headline"> {{ $tc('sw-first-run-wizard.shopwareAccount.headline') }} </h5> <p class="message" v-html="$tc('sw-first-run-wizard.shopwareAccount.message')" ></p> <p class="create-account"> {{ $tc('sw-first-run-wizard.shopwareAccount.registerAccountText') }} <a class="external-link" :href="$tc('sw-first-run-wizard.shopwareAccount.registerAccountUrl')" target="_blank" rel="noopener" > {{ $tc('sw-first-run-wizard.shopwareAccount.registerAccountHere') }} </a>. </p> <div class="input-fields"> <mt-text-field v-model="shopwareId" name="shopwareId" validation="required" :label="$tc('sw-first-run-wizard.shopwareAccount.emailAddressLabel')" :placeholder="$tc('sw-first-run-wizard.shopwareAccount.emailAddressPlaceholder')" /> </div> <div class="input-fields"> <mt-password-field v-model="password" :label="$tc('sw-first-run-wizard.shopwareAccount.passwordLabel')" :placeholder="$tc('sw-first-run-wizard.shopwareAccount.passwordPlaceholder')" /> </div> <p class="forgot-password"> <a class="external-link" :href="$tc('sw-first-run-wizard.shopwareAccount.forgotPasswordUrl')" target="_blank" rel="noopener" > {{ $tc('sw-first-run-wizard.shopwareAccount.forgotPasswordText') }} </a> </p> <div v-if="accountError" class="sw-first-run-wizard-shopware-account__error" > <mt-banner :title="$tc('global.default.error')" variant="critical" > {{ $tc('sw-first-run-wizard.error.messageLoginDataInvalid') }} </mt-banner> </div> </div> </sw-container> </div> {% endblock %}`,n={template:i,inject:["firstRunWizardService"],emits:["frw-set-title","buttons-update","frw-redirect"],data(){return{shopwareId:"",password:"",accountError:!1}},computed:{assetFilter(){return Shopware.Filter.getByName("asset")}},created(){this.createdComponent()},methods:{createdComponent(){this.setTitle(),this.updateButtons()},setTitle(){this.$emit("frw-set-title",this.$tc("sw-first-run-wizard.shopwareAccount.modalTitle"))},updateButtons(){var e;const t=(e=Shopware.Store.get("context").app.config.settings)==null?void 0:e.disableExtensionManagement,r=t?"mailer.selection":"plugins",s=t?"finish":"store",a=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",variant:"secondary",action:`sw.first.run.wizard.index.${r}`,disabled:!1},{key:"skip",label:this.$tc("sw-first-run-wizard.general.buttonSkip"),position:"right",variant:"secondary",action:`sw.first.run.wizard.index.${s}`,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.testCredentials.bind(this),disabled:!1}];this.$emit("buttons-update",a)},testCredentials(){const{shopwareId:t,password:r}=this;return this.firstRunWizardService.checkShopwareId({shopwareId:t,password:r}).then(()=>(this.accountError=!1,this.$emit("frw-redirect","sw.first.run.wizard.index.shopware.domain"),!1)).catch(()=>(this.accountError=!0,!0))}}};export{n as default};
