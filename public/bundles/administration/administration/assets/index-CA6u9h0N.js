import{p as s}from"./purify.es-Du9adIxO.js";const n=`{% block sw_modals_renderer %} <div class="sw-modals-renderer" style="display: none;" > <template v-for="modal in modals" :key="modal.locationId" > <sw-modal :title="$tc(modal.title ?? '')" :closable="modal.closable" :show-header="modal.showHeader" :show-footer="modal.showFooter" :variant="modal.variant" @modal-close="closeModal(modal.locationId)" > <sw-iframe-renderer v-if="modal.locationId" :src="modal.baseUrl" :location-id="modal.locationId" /> <template v-else> <p v-html="sanitizeTextContent(modal.textContent)"></p> </template> <template #modal-footer> <mt-button v-for="button in modal.buttons" :key="button.label" :variant="buttonProps(button).variant" :size="buttonProps(button).size" :square="buttonProps(button).square" @click="() => buttonProps(button).method()" > {{ $tc(button.label ?? '') }} </mt-button> </template> </sw-modal> </template> </div> {% endblock %}`,d=Shopware.Component.wrapComponentConfig({template:n,computed:{modals(){return Shopware.Store.get("modals").modals}},methods:{closeModal(o){Shopware.Store.get("modals").closeModal(o)},buttonProps(o){const a={ghost:"secondary",danger:"critical","ghost-danger":"critical",contrast:"secondary",context:"action"},t=o.variant??"primary",e=a[t]??t,l=["ghost","ghost-danger"].includes(t);return{method:o.method??(()=>{}),label:o.label??"",size:o.size??"small",variant:e,ghost:l,square:o.square??!1}},sanitizeTextContent(o){return s.sanitize(this.$t(o),{ALLOWED_TAGS:["a","b","strong","i","em","u","s","li","ul","img","svg"]})}}});export{d as default};
