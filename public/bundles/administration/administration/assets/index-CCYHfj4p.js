const e=`{% block sw_media_url_form %} <mt-modal-root v-if="variant === 'modal'" :is-open="showModal" @change="onModalChange" > <mt-modal class="sw-media-url-form" variant="small" :title="$tc('global.sw-media-url-form.title')" > {% block sw_media_url_form_input %} <mt-text-field v-model="url" class="sw-media-url-form__url-input" label="URL" :error="invalidUrlError" :placeholder="$tc('global.sw-media-url-form.example')" name="sw-field--url" /> <mt-text-field v-if="missingFileExtension" v-model="extensionFromInput" class="sw-media-url-form__extension-input" :label="$tc('global.sw-media-url-form.labelFileExtension')" validation="required" placeholder="jpg" :help-text="$tc('global.sw-media-url-form.missingFileExtension')" /> {% endblock %} {% block sw_media_url_form_footer %} <template #footer> {% block sw_media_url_form_cancel_button %} <mt-button size="small" variant="secondary" @click="onModalChange(false)" > {{ $tc('global.default.cancel') }} </mt-button> {% endblock %} {% block sw_media_url_form_submit_button %} <mt-button class="sw-media-url-form__submit-button" variant="primary" size="small" :disabled="!isValid" @click.prevent="emitUrl" > {{ $tc('global.sw-media-url-form.upload') }} </mt-button> {% endblock %} </template> {% endblock %} </mt-modal> </mt-modal-root> <div v-else-if="variant === 'inline'"> {% block sw_media_url_form_input_inline %} <mt-text-field v-model="url" class="sw-media-url-form__url-input" label="URL" :error="invalidUrlError" :placeholder="$tc('global.sw-media-url-form.example')" name="sw-field--url" /> <mt-text-field v-if="missingFileExtension" v-model="extensionFromInput" class="sw-media-url-form__extension-input" :label="$tc('global.sw-media-url-form.labelFileExtension')" validation="required" placeholder="jpg" :help-text="$tc('global.sw-media-url-form.missingFileExtension')" /> {% endblock %} <mt-button class="sw-media-url-form__submit-button" :disabled="!isValid" size="small" variant="primary" @click="emitUrl" > {{ $tc('global.sw-media-url-form.upload') }} </mt-button> </div> {% endblock %}`,t={template:e,emits:["media-url-form-submit","modal-close"],props:{variant:{type:String,required:!0,validValues:["modal","inline"],validator(l){return["modal","inline"].includes(l)},default:"inline"}},data(){return{url:"",extensionFromUrl:"",extensionFromInput:"",showModal:!1}},mounted(){this.mountedComponent()},computed:{urlObject(){try{return new URL(this.url)}catch{return this.extensionFromUrl="",null}},hasInvalidInput(){return this.urlObject===null&&this.url!==""},invalidUrlError(){return this.hasInvalidInput?{code:"INVALID_MEDIA_URL"}:null},missingFileExtension(){return this.urlObject!==null&&!this.extensionFromUrl},fileExtension(){return this.extensionFromUrl||this.extensionFromInput},isValid(){return this.urlObject!==null&&this.fileExtension}},watch:{urlObject(){if(this.urlObject===null){this.extensionFromUrl="";return}const l=this.urlObject.pathname.split("/").pop();if(l.split(".").length===1){this.extensionFromUrl="";return}this.extensionFromUrl=l.split(".").pop()}},methods:{mountedComponent(){this.variant==="modal"&&(this.showModal=!0)},emitUrl(l){this.isValid&&(this.$emit("media-url-form-submit",{originalDomEvent:l,url:this.urlObject,fileExtension:this.fileExtension}),this.variant==="modal"&&(this.showModal=!1))},onModalChange(l){this.showModal=l,l||this.$emit("modal-close")}}};export{t as default};
