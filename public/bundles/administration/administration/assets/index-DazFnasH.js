const i=`{% block sw_condition_value_content %} <div class="sw-condition-date-range sw-condition__condition-value"> {% block sw_condition_date_range_field_use_time %} <sw-single-select v-model:value="useTime" name="sw-field--useTime" size="medium" :options="selectValues" :disabled="disabled || undefined" :placeholder="$tc('global.sw-condition.condition.withTime')" show-clearable-button /> {% endblock %} {% block sw_condition_date_range_field_from_date %} <mt-datepicker v-model="fromDate" name="sw-field--fromDate" size="medium" required :date-type="isDateTime" :disabled="disabled || undefined" :placeholder="$tc('sw-datepicker.date.placeholder')" /> {% endblock %} {% block sw_condiiton_date_range_field_to_date %} <mt-datepicker v-model="toDate" name="sw-field--toDate" size="medium" required :date-type="isDateTime" :disabled="disabled || undefined" :placeholder="$tc('sw-datepicker.date.placeholder')" /> {% endblock %} </div> {% endblock %}`,{Component:o}=Shopware,{mapPropertyErrors:n}=o.getComponentHelper(),a={template:i,computed:{selectValues(){return[{label:this.$tc("global.sw-condition.condition.withTime"),value:!0},{label:this.$tc("global.sw-condition.condition.withoutTime"),value:!1}]},useTime:{get(){return this.ensureValueExist(),typeof this.condition.value.useTime>"u"&&(this.condition.value={...this.condition.value,useTime:!1}),this.condition.value.useTime},set(e){this.ensureValueExist(),this.condition.value={...this.condition.value,useTime:e},this.fromDate=this.condition.value.fromDate,this.toDate=this.condition.value.toDate}},fromDate:{get(){return this.ensureValueExist(),this.condition.value.fromDate||null},set(e){this.ensureValueExist(),this.condition.value={...this.condition.value,fromDate:this.formatDate(e,"00:00:00+00:00")}}},toDate:{get(){return this.ensureValueExist(),this.condition.value.toDate||null},set(e){this.ensureValueExist(),this.condition.value={...this.condition.value,toDate:this.formatDate(e,"23:59:59+00:00")}}},isDateTime(){return this.useTime?"datetime":"date"},...n("condition",["value.useTime","value.fromDate","value.toDate"]),currentError(){return this.conditionValueUseTimeError||this.conditionValueFromDateError||this.conditionValueToDateError}},methods:{formatDate(e,t){return e?this.isDateTime==="datetime"?e.replace(".000Z","+00:00"):e.split("T")[0].concat("T".concat(t)):null}}};export{a as default};
