import{S as i}from"./main-DLOZxWIX.js";import"./channel-D6fkBpuJ.js";import"./administration-BkFWn-Oy.js";const l=`{% block sw_cms_element_text %} <div class="sw-cms-el-text"> <div v-if="element.config.content.source === 'mapped'" class="sw-cms-el-text__mapping-preview content-editor" v-html="$sanitize(demoValue)" ></div> <sw-text-editor v-else v-model:value="element.config.content.value" :disabled="disabled" :vertical-align="element.config.verticalAlign.value" :allow-inline-data-mapping="true" :is-inline-edit="true" sanitize-input sanitize-field-name="app_cms_block.template" enable-transparent-background @blur="onBlur" @update:value="onInput" /> </div> {% endblock %}`,{Mixin:o}=Shopware,r={template:l,emits:["element-update"],mixins:[o.getByName("cms-element")],data(){return{editable:!0,demoValue:""}},watch:{"cmsPageState.currentDemoEntity":{handler(){this.updateDemoValue()}},"element.config.content.source":{handler(){this.updateDemoValue()}}},computed:{availableDataMappings(){let e=[];return Object.entries(Shopware.Store.get("cmsPage").currentMappingTypes).forEach(t=>{const[n,a]=t;n==="string"&&(e=[...e,...a])}),e},customTextEditorButtons(){return[i(()=>this.availableDataMappings)]}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("text"),this.updateDemoValue()},updateDemoValue(){if(this.element.config.content.source==="mapped"){const e=`<strong>${this.element.config.content.value}</strong>`,t=`${this.$t("sw-cms.detail.label.mappingPreview")} ${e}`;this.demoValue=this.getDemoValue(this.element.config.content.value)||t}},onBlur(e){this.emitChanges(e)},onInput(e){this.emitChanges(e)},emitChanges(e){e!==this.element.config.content.value&&(this.element.config.content.value=e,this.$emit("element-update",this.element))}}};export{r as default};
