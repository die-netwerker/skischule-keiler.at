const a=`{% block sw_sales_channel_products_assignment_dynamic_product_groups %} <div v-if="productStreams" class="sw-sales-channel-products-assignment-dynamic-product-groups" > {% block sw_sales_channel_products_assignment_dynamic_product_groups_info_text %} <mt-banner ref="alert"> {{ $tc('sw-sales-channel.detail.productAssignmentModal.dynamicProductGroups.infoText') }} </mt-banner> {% endblock %} {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing %} <mt-card :is-loading="isProductLoading" position-identifier="sw-sales-channel-products-assignment-dynamic-product-groups" > <template #grid> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_container %} <div :style="containerStyle"> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_section %} <sw-card-section ref="cardSectionSecondary" secondary divider="bottom" > {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_search %} <sw-simple-search-field v-model:value="term" variant="form" size="small" :placeholder="$tc('sw-sales-channel.detail.productAssignmentModal.dynamicProductGroups.searchFieldPlaceholder')" @search-term-change="onSearch" /> {% endblock %} </sw-card-section> {% endblock %} {% block sw_sales_channel_products_assignment_dynamic_product_groups_card_section_primary %} <sw-card-section class="sw-sales-channel-products-assignment-dynamic-product-groups__card-section-primary"> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_entity %} <sw-entity-listing v-if="productStreams.length > 0" ref="productStreamListing" identifier="sw-sales-channel-products-assignment-dynamic-product-groups-listing" :items="productStreams" :data-source="productStreams" :columns="productStreamColumns" :repository="productStreamRepository" :is-loading="isProductStreamsLoading" :skeleton-item-amount="limit" :plain-appearance="true" :show-settings="false" :allow-column-edit="false" :allow-inline-edit="false" @selection-change="onSelect" @select-item="onSelect" @select-all-items="onSelect" > <template #bulk> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_bulk %} <span></span> {% endblock %} </template> <template #delete-action="{ item }"> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_delete_action %} <span class="sw-sales-channel-products-assignment-dynamic-product-groups__link-open" role="button" tabindex="0" @click="onOpen(item)" @keydown.enter="onOpen(item)" > {{ $tc('global.default.open') }} </span> {% endblock %} </template> <template #pagination> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_pagination %} <sw-pagination v-bind="{ page, limit, total }" :total-visible="3" :auto-hide="false" @page-change="onPaginate" /> {% endblock %} </template> </sw-entity-listing> {% endblock %} {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_empty %} <sw-empty-state v-if="productStreams.length <= 0" :show-description="false" :title="productStreams.length <= 0 && term ? $tc('sw-sales-channel.detail.productAssignmentModal.dynamicProductGroups.titleNoProductStreamsMatching') : $tc('sw-sales-channel.detail.productAssignmentModal.dynamicProductGroups.titleNoProductStreamsAvailable') " > <template #icon> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_empty_icon %} <img :src="assetFilter('/administration/administration/static/img/empty-states/products-empty-state.svg')" alt="" > {% endblock %} </template> </sw-empty-state> {% endblock %} </sw-card-section> {% endblock %} </div> {% endblock %} </template> </mt-card> {% endblock %} </div> {% endblock %}`,{Mixin:i}=Shopware,{Criteria:s}=Shopware.Data,o={template:a,inject:["repositoryFactory"],emits:["selection-change","product-loading"],mixins:[i.getByName("notification")],props:{salesChannel:{type:Object,required:!0},containerStyle:{type:Object,required:!0}},data(){return{productStreams:[],productStreamFilter:[],isProductStreamsLoading:!1,isProductLoading:!1,page:1,limit:10,total:0,term:null}},computed:{productRepository(){return this.repositoryFactory.create("product")},productStreamRepository(){return this.repositoryFactory.create("product_stream")},productCriteria(){const t=new s(1,500);return t.filters=this.productStreamFilter,t.addAssociation("visibilities.salesChannel"),t.addFilter(s.not("AND",[s.equals("product.visibilities.salesChannelId",this.salesChannel.id)])),t},productStreamCriteria(){const t=new s(this.page,this.limit);return this.term&&t.setTerm(this.term),t},productStreamColumns(){return[{property:"name",label:this.$tc("sw-sales-channel.detail.productAssignmentModal.dynamicProductGroups.columnName"),sortable:!1}]},assetFilter(){return Shopware.Filter.getByName("asset")}},created(){this.createdComponent()},methods:{createdComponent(){this.getProductStreams()},getProductStreams(){return this.isProductStreamsLoading=!0,this.productStreamRepository.search(this.productStreamCriteria).then(t=>{this.productStreams=t,this.total=t.total}).catch(()=>{this.productStreams=[],this.total=0}).finally(()=>{this.isProductStreamsLoading=!1})},onSearch(t){this.term=t,t&&(this.page=1),this.getProductStreams()},onPaginate(t){this.page=t.page,this.limit=t.limit,this.getProductStreams()},onOpen(t){const e=this.$router.resolve({name:"sw.product.stream.detail",params:{id:t.id}});window.open(e.href,"_blank")},async onSelect(t){if(Object.keys(t).length<=0){this.$emit("selection-change",[],"groupProducts");return}try{const e=await this.getProductsFromProductStreams(t);this.$emit("selection-change",e,"groupProducts")}catch(e){this.createNotificationError({message:e.message})}},getProductsFromProductStreams(t){const e=Object.keys(t).map(r=>this.getProductStreamFilter(r).then(()=>this.getProducts()));return this.$emit("product-loading",!0),this.isProductLoading=!0,Promise.all(e).then(r=>r.flat()).finally(()=>{this.$emit("product-loading",!1),this.isProductLoading=!1})},getProductStreamFilter(t){return this.productStreamRepository.get(t).then(e=>{this.productStreamFilter=e.apiFilter}).catch(e=>(this.productStreamFilter=[],e))},getProducts(){return this.productRepository.search(this.productCriteria).then(t=>t)}}};export{o as default};
