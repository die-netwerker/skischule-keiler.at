const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-DGR7fyqO.js","assets/channel-D6fkBpuJ.js","assets/main-DLOZxWIX.js","assets/administration-BkFWn-Oy.js","assets/administration-DX5ywH2m.css","assets/main-0YhLQqqP.css","assets/permissions-Cb6wGjLU.js","assets/index-ZX4AzzbJ.css","assets/index-YErrY3mN.js","assets/index-XikFSKZq.css","assets/index-B6G980nO.js","assets/index-rFp0IcAg.css"])))=>i.map(i=>d[i]);
import{_ as t}from"./administration-BkFWn-Oy.js";import{A as n}from"./api.service-Dyd0zpin.js";import"./channel-D6fkBpuJ.js";class o extends n{constructor(e,s,i){super(e,s,"service","application/json"),this.systemConfigService=i,this.name="ShopwareServices"}getInstalledServices(){let e=Shopware.Store.get("session").languageId;e||(e=Shopware.Context.api.languageId);const s={"sw-language-id":e};return this.httpClient.get("service/list",{headers:this.getBasicHeaders(s)}).then(i=>i.data)}async getServicesContext(){const e=await this.systemConfigService.getValues("core.services");return{disabled:e["core.services.disabled"],permissionsConsent:typeof e["core.services.permissionsConsent"]=="string"?JSON.parse(e["core.services.permissionsConsent"]):void 0}}acceptRevision(e){return this.httpClient.post(`services/permissions/grant/${e}`,{},{headers:this.getBasicHeaders()})}revokePermissions(){return this.httpClient.post("services/permissions/revoke",{},{headers:this.getBasicHeaders()})}enableAllServices(){return this.httpClient.post("services/enable",{},{headers:this.getBasicHeaders()}).then(()=>this.getServicesContext())}disableAllServices(){return this.httpClient.post("services/disable",{},{headers:this.getBasicHeaders()})}getCategorizedPermissions(e){return this.httpClient.get(`services/categorized-permissions/${e}`,{headers:this.getBasicHeaders()}).then(s=>s.data??{})}}class a{constructor(e){this.registryUrl=e}async getCurrentRevision(e){const i=await(await fetch(new URL("/api/service/permission-revisions",this.registryUrl),{method:"GET",headers:{Accept:"application/json","Accept-Language":e},mode:"cors"})).json();return this.assertIsRevisionResponse(i),i.revisions}assertIsRevisionResponse(e){if(typeof e!="object"||e===null||!("revisions"in e))throw new Error("Could not fetch Revision data from Service Registry")}}Shopware.Service().register("shopwareServicesService",()=>new o(Shopware.Application.getContainer("init").httpClient,Shopware.Service("loginService"),Shopware.Service("systemConfigApiService")));Shopware.Service().register("serviceRegistryClient",()=>new a(Shopware.Context.api.serviceRegistryUrl));Shopware.Component.register("sw-settings-services-index",()=>t(()=>import("./index-DGR7fyqO.js"),__vite__mapDeps([0,1,2,3,4,5,6,7])));Shopware.Component.register("sw-settings-services-dashboard-banner",()=>t(()=>import("./index-YErrY3mN.js"),__vite__mapDeps([8,9])));Shopware.Component.register("sw-settings-services-grant-permissions-modal",()=>t(()=>import("./index-B6G980nO.js"),__vite__mapDeps([10,2,1,3,4,5,6,11])));Shopware.Module.register("sw-settings-services",{type:"core",name:"services",title:"sw-settings-services.general.title",description:"sw-settings-services.general.description",color:"#9AA8B5",icon:"regular-cog",favicon:"icon-module-settings.png",entity:"store_settings",routes:{index:{component:"sw-settings-services-index",path:"index",meta:{parentPath:"sw.settings.index.system",privilege:"system.plugin_maintain"}}},settingsItem:{group:"system",to:"sw.settings.services.index",icon:"regular-view-grid",privilege:"system.plugin_maintain"}});
