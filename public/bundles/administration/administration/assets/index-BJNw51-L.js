const t=`{% block sw_condition_and_container %} <div class="sw-condition-or-container" :class="containerRowClass" > {% block sw_condition_or_container_children %} <template v-for="(child, index) in condition[childAssociationField]" :key="\`condition-or-container-child--\${index}\`" > <div v-if="index > 0" class="condition-content__spacer--or" > {{ $tc('global.sw-condition.condition.or') }} </div> <sw-condition-tree-node :parent-condition="condition" :condition="child" :disabled="disabled || undefined" :level="level + 1" /> </template> {% endblock %} {% block sw_condition_or_container_actions %} <div class="sw-condition-or-container__actions"> <mt-button v-tooltip.top="getNoPermissionsTooltip('product_stream.editor')" ghost size="small" class="sw-condition-or-container__actions--or" :disabled="disabled" variant="primary" @click="onAddPlaceholder" > {{ $tc('global.sw-condition.condition.AddOrCondition') }} </mt-button> <mt-button v-if="level !== 0" v-tooltip.top="getNoPermissionsTooltip('product_stream.editor')" ghost size="small" class="sw-condition-or-container__actions--sub" :disabled="disabled" variant="primary" @click="onAddAndContainer" > {{ $tc('global.sw-condition.condition.AddSubCondition') }} </mt-button> <mt-button v-tooltip.top="getNoPermissionsTooltip('product_stream.editor')" size="small" class="sw-condition-or-container__actions--delete" :disabled="disabled" variant="secondary" @click="onDeleteAll" > <span v-if="level !== 0">{{ $tc('global.sw-condition.condition.deleteConditions') }}</span> <span v-else>{{ $tc('global.sw-condition.condition.deleteAllConditions') }}</span> </mt-button> </div> {% endblock %} </div> {% endblock %}`,{Mixin:n}=Shopware,e={template:t,inject:["acl"],mixins:[n.getByName("ruleContainer")],created(){this.createdComponent()},methods:{createdComponent(){this.nextPosition===0&&this.onAddPlaceholder()},onAddPlaceholder(){if(this.level===0){this.onAddAndContainer();return}this.insertNodeIntoTree(this.condition,this.createCondition(this.conditionDataProviderService.getPlaceholderData(),this.condition.id,this.nextPosition))},onAddAndContainer(){const i=this.createCondition(this.conditionDataProviderService.getAndContainerData(),this.condition.id,this.nextPosition);this.insertNodeIntoTree(this.condition,i),this.condition[this.childAssociationField].length===2&&this.condition[this.childAssociationField][0].type===null&&this.removeNodeFromTree(this.condition,this.condition[this.childAssociationField][0])},onDeleteAll(){if(this.level===0){for(;this.condition[this.childAssociationField].length>0;)this.removeNodeFromTree(this.condition,this.condition[this.childAssociationField][0]);return}this.removeNodeFromTree(this.parentCondition,this.condition)},getNoPermissionsTooltip(i,o=!0){return{showDelay:300,message:this.$tc("sw-privileges.tooltip.warning"),appearance:"dark",showOnDisabledElements:o,disabled:this.acl.can(i)}}}};export{e as default};
