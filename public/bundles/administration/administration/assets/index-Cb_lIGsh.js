const l=`{% block sw_custom_entity_input_field %} <div class="sw-custom-entity-input-field"> <mt-text-field v-if="type === 'string'" class="sw-custom-entity-input-field__string" :model-value="currentValue" :label="label" :placeholder="placeholder" :help-text="helpText" @update:model-value="onChange" /> <mt-textarea v-else-if="type === 'text'" class="sw-custom-entity-input-field__text" :model-value="currentValue" :label="label" :placeholder="placeholder" :help-text="helpText" @update:model-value="onChange" /> <mt-number-field v-else-if="type === 'int'" class="sw-custom-entity-input-field__int" :model-value="currentValue" number-type="int" :label="label" :placeholder="placeholder" :help-text="helpText" @update:model-value="onChange" /> <mt-number-field v-else-if="type === 'float'" class="sw-custom-entity-input-field__float" :model-value="currentValue" number-type="float" :digits="10" :label="label" :placeholder="placeholder" :help-text="helpText" @update:model-value="onChange" /> <mt-switch v-else-if="type === 'boolean'" class="sw-custom-entity-input-field__boolean" :model-value="currentValue" :label="label" :placeholder="placeholder" :help-text="helpText" @update:model-value="onChange" /> <mt-datepicker v-else-if="type === 'date'" class="sw-custom-entity-input-field__date" hide-hint :model-value="currentValue" :label="label" :placeholder="placeholder" :help-text="helpText" @update:model-value="onChange" /> <mt-text-field v-else class="sw-custom-entity-input-field__undefined" :label="label" :error="{ code: 'CONTENT__INVALID_CUSTOM_ENTITY_FIELD_TYPE' }" disabled /> </div> {% endblock %}`,t=Shopware.Component.wrapComponentConfig({template:l,inject:["feature"],props:{value:{type:[Object,String,Number,Boolean],required:!1,default:null},type:{type:String,required:!0},label:{type:String,required:!1,default:""},placeholder:{type:String,required:!1,default:""},helpText:{type:String,required:!1,default:""}},computed:{currentValue:{get(){return this.type==="boolean"?!!this.value:this.value},set(e){this.onChange(e)}}},methods:{onChange(e){this.$emit("update:value",e)}}});export{t as default};
