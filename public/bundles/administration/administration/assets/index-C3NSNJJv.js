import{j as d,s as o,aG as I,Z as _,Q as w}from"./channel-D6fkBpuJ.js";const h=`<template v-for="sidebar in sidebars" :key="sidebar.locationId" > <div v-if="activeSidebar && activeSidebar.resizable && activeSidebar.locationId === sidebar.locationId && sidebarDisplayOptions.isOverlayMode" class="sw-sidebar-renderer-backdrop" :class="{ 'is-resizing': sidebarDisplayOptions.isResizing }" @click="closeSidebar(sidebar.locationId)" ></div> <aside class="sw-sidebar-renderer" :class="{ 'is-active': activeSidebar && activeSidebar.locationId === sidebar.locationId, 'is-resizing': sidebarDisplayOptions.isResizing, 'is-overlay': activeSidebar && activeSidebar.resizable && sidebarDisplayOptions.isOverlayMode, }" :style="{ width: sidebarDisplayOptions.currentWidth, maxWidth: sidebarDisplayOptions.availableWidth }" > <div class="sw-sidebar-renderer__overlay" :class="{ 'sw-sidebar-renderer__overlay-resizable': activeSidebar && activeSidebar.resizable, }" :style="{ width: sidebarDisplayOptions.currentWidth }" > <div v-if="activeSidebar && activeSidebar.resizable" class="sw-sidebar-renderer__resize-handle" @mousedown="startSidebarResize" ></div> <header class="sw-sidebar-renderer__header"> <div class="sw-sidebar-renderer__header-content"> <h3 class="sw-sidebar-renderer__title"> {{ $tc(sidebar.title) }} </h3> <mt-button v-if="sidebarDisplayOptions.isOverlayMode && sidebarDisplayOptions.isCollapsable" show-front-icon="true" class="sw-sidebar-renderer__button-collapse" :aria-label="$tc('sidebar.ariaLabelButtonCollapse')" variant="secondary" @click="collapseSidebar" > <template #iconFront> <mt-icon name="regular-long-arrow-right" size="12px" /> </template> {{ $tc('sidebar.buttonCollapse') }} </mt-button> </div> <button class="sw-sidebar-renderer__button-close" :aria-label="$tc('sidebar.ariaLabelButtonClose')" @click="closeSidebar(sidebar.locationId)" > <mt-icon name="regular-times-xs" size="12px" /> </button> </header> <section class="sw-sidebar-renderer__content"> <sw-iframe-renderer :src="sidebar.baseUrl" :location-id="sidebar.locationId" :full-screen="false" /> </section> </div> </aside> </template>`,W=Shopware.Component.wrapComponentConfig({template:h,setup(){const a=d(480),r=d(!1),t=d(window.innerWidth),i=o(()=>Shopware.Store.get("sidebar").getActiveSidebar),u=o(()=>Shopware.Store.get("sidebar").sidebars),v=o(()=>{var b;const e=(b=i.value)!=null&&b.resizable?t.value-1400:480,s=Math.max(480,a.value);return{availableWidth:`${Math.max(e,0)}px`,currentWidth:`${s}px`,isOverlayMode:e<s,isCollapsable:e>480,isResizing:r.value}}),p=e=>{Shopware.Store.get("sidebar").closeSidebar(e)},S=()=>{a.value=480},n=e=>{r.value&&(a.value=t.value-e.clientX)},l=()=>{r.value=!1,document.body.style.cursor="",document.body.style.userSelect="",document.removeEventListener("mousemove",n,!0),document.removeEventListener("mouseup",l,!0),localStorage.setItem("sw-sidebar-width",a.value.toString())},m=e=>{var s;(s=i.value)!=null&&s.resizable&&(r.value=!0,document.body.style.cursor="col-resize",document.body.style.userSelect="none",document.addEventListener("mousemove",n,{passive:!0,capture:!0}),document.addEventListener("mouseup",l,{capture:!0}),e.preventDefault())},c=()=>{t.value=window.innerWidth};return I(()=>{var e;i.value&&!((e=i.value)!=null&&e.resizable)&&a.value!==480&&(a.value=480)}),_(()=>{const e=localStorage.getItem("sw-sidebar-width");e&&(a.value=Math.max(parseInt(e,10),480)),window.addEventListener("resize",c)}),w(()=>{window.removeEventListener("resize",c)}),{activeSidebar:i,sidebars:u,sidebarDisplayOptions:v,closeSidebar:p,startSidebarResize:m,collapseSidebar:S}}});export{W as default};
