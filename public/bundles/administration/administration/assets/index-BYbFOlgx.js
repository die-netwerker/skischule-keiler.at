const i=`{% block sw_cms_el_config_form %} <sw-tabs position-identifier="sw-cms-element-config-form" class="sw-cms-el-config-form__tabs" default-item="content" > <template #default="{ active }"> {% block sw_cms_el_config_form_tab_content %} <sw-tabs-item :title="$tc('sw-cms.elements.general.config.tab.content')" name="content" :active-tab="active" > {{ $tc('sw-cms.elements.general.config.tab.content') }} </sw-tabs-item> {% endblock %} {% block sw_cms_el_form_config_tab_options %} <sw-tabs-item v-if="element.config.type.value === 'contact'" :title="$tc('sw-cms.elements.general.config.tab.settings')" name="options" :active-tab="active" > {{ $tc('sw-cms.elements.general.config.tab.settings') }} </sw-tabs-item> {% endblock %} </template> <template #content="{ active }" > {% block sw_cms_el_form_config_content %} <sw-container v-if="active === 'content'" class="sw-cms-el-config-form__tab-content" > {% block sw_cms_el_form_config_content_form_type %} <mt-select v-model="element.config.type.value" :label="$tc('sw-cms.elements.form.config.label.type')" :options="formTypeOptions" /> {% endblock %} {% block sw_cms_el_form_config_content_form_title %} <mt-text-field v-model="element.config.title.value" :label="$tc('sw-cms.elements.form.config.label.title')" /> {% endblock %} {% block sw_cms_el_form_config_content_form_confirmation_text %} <mt-textarea v-if="element.config.type.value === 'contact'" v-model="element.config.confirmationText.value" :label="$tc('sw-cms.elements.form.config.label.confirmationText')" /> {% endblock %} </sw-container> {% endblock %} {% block sw_cms_el_form_config_options %} <sw-container v-else-if="active === 'options' && element.config.type.value === 'contact'" class="sw-cms-el-config-form__tab-options" > <sw-tagged-field :value="element.config.mailReceiver.value" :class="getLastMailClass" :label="$tc('sw-cms.elements.form.config.label.receiverEmail')" name="mailReceiver" placeholder="john@doe.com" @update:value="updateMailReceiver" /> </sw-container> {% endblock %} </template> </sw-tabs> {% endblock %}`,{Mixin:n}=Shopware,l={template:i,inject:["systemConfigApiService"],mixins:[n.getByName("cms-element")],computed:{getLastMailClass(){return this.element.config.mailReceiver.value.length===1?"is--last":""},formTypeOptions(){return[{id:1,value:"",label:this.$tc("sw-cms.elements.form.config.label.type")},{id:2,value:"contact",label:this.$tc("sw-cms.elements.form.config.label.typeContact")},{id:3,value:"newsletter",label:this.$tc("sw-cms.elements.form.config.label.typeNewsletter")}]}},created(){this.createdComponent(),this.setShopMail()},methods:{createdComponent(){this.initElementConfig("form")},async getShopMail(){return(await this.systemConfigApiService.getValues("core.basicInformation"))["core.basicInformation.email"]},async setShopMail(){const e=await this.getShopMail();this.element.config.defaultMailReceiver.value&&!this.element.config.mailReceiver.value.includes(e)&&this.element.config.mailReceiver.value.push(e)},async updateMailReceiver(e){if(this.element.config.mailReceiver.value=e,!this.validateMail())return;const t=await this.getShopMail();this.element.config.defaultMailReceiver.value=this.element.config.mailReceiver.value.includes(t)},validateMail(){const e=this.element.config.mailReceiver.value.at(-1);return e&&!e.includes("@")?(this.element.config.mailReceiver.value.pop(),!1):!0}}};export{l as default};
