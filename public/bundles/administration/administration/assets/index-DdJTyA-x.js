const i=`{% block sw_promotion_v2_cart_condition_form %} <div class="sw-promotion-v2-cart-condition-form"> {% block sw_promotion_v2_cart_condition_form_rules_field %} <sw-select-rule-create v-if="promotion" v-model:rules="promotion.cartRules" class="sw-promotion-v2-cart-condition-form__rule-select-cart" :local-mode="promotion.isNew()" :rule-filter="ruleFilter" :label="$tc('sw-promotion-v2.detail.conditions.preConditions.labelCartConditionSelect')" :placeholder="$tc('sw-promotion-v2.detail.conditions.preConditions.placeholderCartConditionSelect')" :rule-scope="['checkout', 'global', 'lineItem']" rule-aware-group-key="cartPromotions" :disabled="isEditingDisabled" /> {% endblock %} {% block sw_promotion_v2_cart_condition_form_use_setgroups_field %} <mt-switch v-model="promotion.useSetGroups" class="sw-promotion-v2-cart-condition-form__use-setgroups" :disabled="!acl.can('promotion.editor')" :label="$tc('sw-promotion-v2.detail.conditions.setgroups.switchGroupsEnabled')" /> {% endblock %} <template v-if="promotion.useSetGroups"> {% block sw_promotion_v2_cart_condition_setgroup_card %} <mt-card v-for="(group, index) in promotion.setgroups" :id="\`sw-promotion-v2-cart-condition-form__setgroup-card-\${index + 1}\`" :key="group.id" position-identifier="sw-promotion-cart-condition-setgroup" class="sw-promotion-v2-cart-condition-form__setgroup-card" > {% block sw_promotion_v2_cart_condition_setgroup_card_context_action %} <template #context-actions> {% block sw_promotion_v2_cart_condition_setgroup_card_context_action_duplicate %} <sw-context-menu-item :disabled="isEditingDisabled" @click="duplicateSetGroup(group)" > {{ $tc('global.default.duplicate') }} </sw-context-menu-item> {% endblock %} {% block sw_promotion_v2_cart_condition_setgroup_card_context_action_delete %} <sw-context-menu-item v-tooltip="{ message: $tc('sw-privileges.tooltip.warning'), disabled: acl.can('promotion.editor'), showOnDisabledElements: true }" variant="danger" :disabled="isEditingDisabled" @click="deleteSetGroup(group)" > {{ $tc('global.default.delete') }} </sw-context-menu-item> {% endblock %} </template> {% endblock %} {% block sw_promotion_v2_cart_condition_setgroup_card_title %} <div class="sw-promotion-v2-cart-condition-form__setgroup-card-title"> {{ $tc('sw-promotion-v2.detail.conditions.setgroups.titleName') }} {{ index + 1 }} </div> {% endblock %} <sw-container columns="1fr 1fr" gap="0px 30px" > {% block sw_promotion_v2_cart_condition_setgroup_mode_field %} <mt-select v-model="group.packagerKey" class="sw-promotion-v2-cart-condition-form__setgroup-mode" :label="$tc('sw-promotion-v2.detail.conditions.setgroups.labelMode')" :disabled="isEditingDisabled" :options="packagerOptions" /> {% endblock %} {% block sw_promotion_v2_cart_condition_setgroup_value_field %} <mt-number-field v-model="group.value" class="sw-promotion-v2-cart-condition-form__setgroup-value" :label="$tc('sw-promotion-v2.detail.conditions.setgroups.labelValue')" :disabled="isEditingDisabled" /> {% endblock %} </sw-container> <sw-container columns="1fr 1fr" gap="0px 30px" > {% block sw_promotion_v2_cart_condition_setgroup_sorting_field %} <mt-select v-model="group.sorterKey" class="sw-promotion-v2-cart-condition-form__setgroup-sorting" :label="$tc('sw-promotion-v2.detail.conditions.setgroups.labelSorting')" :disabled="isEditingDisabled" :options="sorterOptions" /> {% endblock %} </sw-container> <sw-container columns="1fr" gap="0px 30px" > {% block sw_promotion_v2_cart_condition_setgroup_rules_field %} <sw-select-rule-create v-model:rules="group.setGroupRules" class="sw-promotion-v2-cart-condition-form__setgroup-rules" :label="$tc('sw-promotion-v2.detail.conditions.setgroups.labelRules')" :placeholder="$tc('sw-promotion-v2.detail.conditions.setgroups.placeholder')" :rule-filter="ruleFilter" :rule-scope="['checkout', 'global', 'lineItem']" :disabled="isEditingDisabled" rule-aware-group-key="promotionSetGroups" /> {% endblock %} </sw-container> </mt-card> {% endblock %} {% block sw_promotion_v2_cart_condition_add_group_button %} <div class="sw-promotion-v2-cart-condition-form__add-group-button-container"> <mt-button ghost class="sw-promotion-v2-cart-condition-form__add-group-button" :disabled="isEditingDisabled" variant="secondary" @click="addSetGroup" > {{ $tc('sw-promotion-v2.detail.conditions.setgroups.buttonAddGroup') }} </mt-button> </div> {% endblock %} </template> </div> {% endblock %}`,{Criteria:e}=Shopware.Data,s={template:i,inject:["repositoryFactory","acl","promotionSyncService"],props:{promotion:{type:Object,required:!1,default:null},restrictedRules:{type:Array,required:!1,default(){return[]}}},data(){return{packagerKeys:[],sorterKeys:[]}},computed:{promotionGroupRepository(){return this.repositoryFactory.create("promotion_setgroup")},ruleFilter(){const o=new e(1,25);return o.addAssociation("conditions").addSorting(e.sort("name","ASC",!1)),o},packagers(){const o=[];return this.packagerKeys.forEach(t=>{o.push({key:t,name:this.$tc(`sw-promotion-v2.detail.conditions.setgroups.packager.${t}`)})}),o},sorters(){const o=[];return this.sorterKeys.forEach(t=>{o.push({key:t,name:this.$tc(`sw-promotion-v2.detail.conditions.setgroups.sorter.${t}`)})}),o},isEditingDisabled(){return this.promotion===null||!this.acl.can("promotion.editor")},packagerOptions(){return this.packagers.map(o=>({id:o.key,value:o.key,label:o.name}))},sorterOptions(){return this.sorters.map(o=>({id:o.key,value:o.key,label:o.name}))},setGroupCriteria(){const o=new e(1,25);return o.addAssociation("setGroupRules"),o.addFilter(e.equals("promotionId",this.promotion.id)),o}},watch:{promotion(){this.loadSetGroups()}},created(){this.createdComponent()},methods:{createdComponent(){this.promotion&&this.loadSetGroups(),this.promotionSyncService.loadPackagers().then(o=>{this.packagerKeys=o}),this.promotionSyncService.loadSorters().then(o=>{this.sorterKeys=o})},loadSetGroups(){this.promotionGroupRepository.search(this.setGroupCriteria).then(o=>{this.promotion.setgroups=o})},addSetGroup(){const o=this.promotionGroupRepository.create();o.promotionId=this.promotion.id,o.value=2,o.packagerKey="COUNT",o.sorterKey="PRICE_ASC",this.promotion.setgroups.push(o)},duplicateSetGroup(o){const t=this.promotionGroupRepository.create();t.promotionId=o.promotionId,t.value=o.value,t.packagerKey=o.packagerKey,t.sorterKey=o.sorterKey,this.promotion.setgroups.push(t)},deleteSetGroup(o){const t=Shopware.Store.get("swPromotionDetail").setGroupIdsDelete;t.push(o.id),Shopware.Store.get("swPromotionDetail").setGroupIdsDelete=t,this.promotion.setgroups=this.promotion.setgroups.filter(r=>r.id!==o.id)}}};export{s as default};
