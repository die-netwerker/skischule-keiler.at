const s='{% block sw_simple_search_field %} <div class="sw-simple-search-field"> {% block sw_simple_search_field_input %} <mt-text-field class="sw-simple-search-field__input" :class="fieldClasses" :placeholder="placeholder" v-bind="$attrs" :model-value="value" :size="size" @update:model-value="onInput" /> {% endblock %} {% block sw_simple_search_field_search_icon %} <slot name="sw-simple-search-field-icon"> {% block sw_simple_search_field_slot_search_icon %} <mt-icon v-if="icon" class="sw-simple-search-field__search-icon" :name="icon" size="16px" /> {% endblock %} </slot> {% endblock %} </div> {% endblock %}',{Utils:a}=Shopware,t={template:s,inheritAttrs:!1,emits:["update:value","search-term-change"],props:{variant:{type:String,required:!1,default:"default",validValues:["default","inverted","form"],validator(e){return e.length?["default","inverted","form"].includes(e):!0}},value:{type:String,default:null,required:!1},size:{type:String,required:!1,default:"default"},delay:{type:Number,required:!1,default:400},icon:{type:String,required:!1,default:"regular-search-s"}},data(){return{onSearchTermChanged:a.debounce(function(l){this.$emit("search-term-change",l)},this.delay)}},computed:{fieldClasses(){return[`sw-simple-search-field--${this.variant}`]},placeholder(){return this.$attrs.placeholder||this.$tc("global.sw-simple-search-field.defaultPlaceholder")}},methods:{onInput(e){this.$emit("update:value",e),this.onSearchTermChanged(e)}}};export{t as default};
