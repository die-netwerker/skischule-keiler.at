const o=`{% block sw_settings_snippet_set_list %} <sw-page class="sw-settings-snippet-set-list"> {% block sw_settings_snippet_set_list_search_bar %} <template #search-bar> <sw-search-bar :initial-search-type="$tc('sw-settings-snippet.general.searchBarTitleSets')" :placeholder="$tc('sw-settings-snippet.general.placeholderSearchBarSets')" :initial-search="term" @search="onSearch" /> </template> {% endblock %} {% block sw_settings_snippet_set_list_smart_bar_header %} <template #smart-bar-header> {% block sw_settings_snippet_set_list_smart_bar_header_title %} <h2> {% block sw_settings_snippet_set_list_smart_bar_header_title_text %} {{ $t('sw-settings.index.title') }} <mt-icon name="regular-chevron-right-xs" size="12px" /> {{ $t('sw-settings-snippet.general.mainMenuItemGeneral') }} {% endblock %} </h2> {% endblock %} </template> {% endblock %} <template #smart-bar-actions> <mt-button class="sw-settings-snippet-set-list__action-add" variant="primary" :is-loading="isLoading" :disabled="!acl.can('snippet.creator')" size="default" @click="onAddSnippetSet" > {{ $t('sw-settings-snippet.setList.buttonAddSet') }} </mt-button> </template> {% block sw_settings_snippet_set_list_card %} <template #content> <sw-card-view> {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_title %} <mt-card v-if="false" position-identifier="sw-settings-snippet-set-list-title" /> {% endblock %} {% block sw_settings_snippet_set_list_card_list %} <mt-card position-identifier="sw-settings-snippet-set-list-card-list" :is-loading="isLoading" :title="$t('sw-settings-snippet.setList.cardTitle')" large > {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_container %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_container_header %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_container_header_btn_export %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_container_header_btn_edit_set %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_container_header_btn_split %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_container_header_btn_add_set %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_btn_copy_icon %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_btn_copy_split %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_btn_copy %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_copy_context_menu %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_copy_context_divider %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_copy_context_menu_items %}{% endblock %} {% endblock %} {% endblock %} {% endblock %} {% endblock %} {% block sw_settings_snippet_set_list_card_list_grid %} <template #grid> <div class="sw-settings-snippet-set-list__container"> <sw-entity-listing v-if="snippetSets.length" ref="snippetSetList" class="sw-snippet-set-list__list" identifier="sw-snippet-set-list" :items="snippetSets" :columns="snippetSetColumns" :repository="snippetSetRepository" large show-settings show-selection allow-bulk-edit :allow-edit="acl.can('snippet.editor')" :allow-delete="acl.can('snippet.deleter')" :allow-inline-edit="acl.can('snippet.editor')" :skeleton-item-amount="5" :sort-by="sortBy" :sort-direction="sortDirection" @selection-change="onSelectionChanged" @bulk-edit-modal-open="onEditSnippetSets" > <template #column-name="{ item, isInlineEdit }"> <router-link v-if="!isInlineEdit" class="sw-settings-snippet-set__column-name" :to="{ name: 'sw.settings.snippet.list', query: { ids: [item.id] } }" > {{ item.name }} </router-link> <template v-else> <mt-text-field v-model="item.name" class="sw-settings-snippet-set__column-name" :placeholder="$t('sw-settings-snippet.setList.placeholderName')" size="small" /> </template> </template> <template #column-updatedAt="{ item }"> <template v-if="item.updatedAt"> <sw-time-ago :date="item.updatedAt" /> </template> <template v-else> <sw-time-ago :date="item.createdAt" /> </template> </template> <template #column-baseFile="{ item, isInlineEdit, compact }"> <template v-if="!isInlineEdit"> {{ item.baseFile }} </template> <mt-select v-else v-model="item.baseFile" class="sw-settings-snippet-set__column-base-file" :options="baseFileOptions" :placeholder="$t('sw-settings-snippet.setList.placeholderBaseFile')" :small="compact" /> </template> <template #actions="{ item }"> <sw-context-menu-item class="sw-snippet-set-list__list-context-edit" :router-link="{ name: 'sw.settings.snippet.list', query: { ids: [item.id] } }" > {{ contextMenuEditSnippet }} </sw-context-menu-item> <sw-context-menu-item class="sw-snippet-set-list__list-context-clone" :disabled="!acl.can('snippet.creator')" @click="onConfirmClone(item.id)" > {{ $t('global.default.duplicate') }} </sw-context-menu-item> <sw-context-menu-item class="sw-snippet-set-list__list-context-delete" variant="danger" :disabled="!acl.can('snippet.deleter')" @click="onDeleteSet(item.id)" > {{ $t('global.default.delete') }} </sw-context-menu-item> </template> <template #action-modals="{ item }"> <sw-confirm-modal v-if="showDeleteModal === item.id" type="delete" :text="$t('sw-settings-snippet.setList.textDeleteConfirm', { name: item.name })" @confirm="onConfirmDelete" @cancel="closeDeleteModal" @close="closeDeleteModal" /> </template> </sw-entity-listing> </div> {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_template %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_column_name %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_column_name_link %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_column_name_editor %}{% endblock %} {% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_column_changed %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_column_changed_date %}{% endblock %} {% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_column_base_file %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_column_base_file_editor %}{% endblock %} {% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_column_base_action %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_column_base_action_buttons %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_column_base_action_btn_edit %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_column_base_action_btn_clone %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_column_base_action_btn_delete %}{% endblock %} {% endblock %} {% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_columns_delete_modal %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_delete_modal_confirm_delete_text %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_delete_modal_footer %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_delete_modal_cancel %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_delete_modal_confirm %}{% endblock %} {% endblock %} {% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_columns_clone_modal %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_clone_modal_confirm_delete_text %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_clone_modal_footer %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_clone_modal_cancel %}{% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_clone_modal_confirm %}{% endblock %} {% endblock %} {% endblock %} {% endblock %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_pagination %} {# @deprecated tag:v6.8.0 - Will be removed without replacement #} {% block sw_settings_snippet_set_list_card_list_grid_pagination_bar %}{% endblock %} {% endblock %} </template> {% endblock %} </mt-card> {% endblock %} </sw-card-view> </template> {% endblock %} </sw-page> {% endblock %}`,{Mixin:c,Data:{Criteria:n}}=Shopware,r={template:o,inject:["snippetSetService","repositoryFactory","acl","feature"],mixins:[c.getByName("sw-settings-list")],data(){return{isLoading:!1,entityName:"snippetSet",sortBy:"name",sortDirection:"ASC",offset:0,baseFiles:[],snippetSets:[],showDeleteModal:!1,showCloneModal:!1,snippetsEditable:!1,selection:{}}},metaInfo(){return{title:this.$createTitle()}},computed:{snippetSetRepository(){return this.repositoryFactory.create("snippet_set")},snippetSetCriteria(){const e=new n(this.page,this.limit);return e.addSorting(n.sort("name","ASC")),this.term&&e.setTerm(this.term),e},contextMenuEditSnippet(){return this.acl.can("snippet.editor")?this.$t("global.default.edit"):this.$t("global.default.view")},dateFilter(){return Shopware.Filter.getByName("date")},baseFileOptions(){return this.baseFiles.map((e,s)=>({id:s,value:e.name,label:e.name}))},snippetSetColumns(){return[{property:"name",label:this.$t("sw-settings-snippet.setList.columnName"),inlineEdit:"string"},{property:"iso",label:this.$t("sw-settings-snippet.setList.columnIso"),inlineEdit:"string"},{property:"baseFile",label:this.$t("sw-settings-snippet.setList.columnBaseFile"),inlineEdit:"string"},{property:"updatedAt",label:this.$t("sw-settings-snippet.setList.columnChangedAt")}]}},methods:{getList(){return this.isLoading=!0,this.loadBaseFiles().then(()=>this.snippetSetRepository.search(this.snippetSetCriteria).then(e=>{this.total=e.total,this.snippetSets=e,this.isLoading=!1}))},loadBaseFiles(){return this.snippetSetService.getBaseFiles().then(e=>{this.baseFiles=Object.values(e.items??{}),this.baseFiles.sort((s,t)=>s.name.localeCompare(t.name))})},async onAddSnippetSet(){const e=this.snippetSetRepository.create();e.iso=this.baseFiles[0].iso,e.baseFile=this.baseFiles[0].name,e.name=this.$t("sw-settings-snippet.setList.newSnippetName");const s=e.name;let t=1;for(;this.snippetSets.some(i=>i.name===e.name);)t+=1,e.name=`${s} (${t})`;await this.snippetSetRepository.save(e),await this.getList()},onInlineEditSave(e){this.isLoading=!0;const s=this.baseFiles.find(t=>t.name===e.baseFile);s&&s.iso!==null?(e.iso=s.iso,this.snippetSetRepository.save(e).then(()=>{this.createInlineSuccessNote(e.name)}).catch(()=>{this.createInlineErrorNote(e.name),this.getList()}).finally(()=>{this.isLoading=!1})):(this.isLoading=!1,this.createInlineErrorNote(e.name),this.getList())},onEditSnippetSets(){if(!this.snippetsEditable){this.createNotEditableErrorNote();return}const e=Object.keys(this.snippetSelection);this.$router.push({name:"sw.settings.snippet.list",query:{ids:e}})},onSelectionChanged(e){this.snippetSelection=e,this.snippetSelectionCount=Object.keys(e).length,this.snippetsEditable=this.snippetSelectionCount>=1},onInlineEditCancel(){this.getList()},onDeleteSet(e){this.showDeleteModal=e},async onConfirmDelete(){try{await this.snippetSetRepository.delete(this.showDeleteModal),await this.getList(),this.createDeleteSuccessNote()}catch{this.createDeleteErrorNote()}this.closeDeleteModal()},closeDeleteModal(){this.showDeleteModal=!1},onClone(e){this.showCloneModal=e},closeCloneModal(){this.showCloneModal=!1},async onConfirmClone(e){this.isLoading=!0;try{const s=await this.snippetSetRepository.clone(e),t=await this.snippetSetRepository.get(s.id);if(!t)return;t.name=`${t.name} ${this.$t("sw-settings-snippet.general.copyName")}`;const i=t.name;let l=1;for(;this.snippetSets.some(a=>a.name===t.name);)l+=1,t.name=`${i} (${l})`;try{await this.snippetSetRepository.save(t),this.createCloneSuccessNote()}catch{await this.snippetSetRepository.delete(t.id),this.createCloneErrorNote()}finally{this.getList()}}catch{this.createCloneErrorNote()}finally{this.isLoading=!1}},createDeleteSuccessNote(){this.createNotificationSuccess({message:this.$t("sw-settings-snippet.setList.deleteNoteSuccessMessage")})},createDeleteErrorNote(){this.createNotificationError({message:this.$t("sw-settings-snippet.setList.deleteNoteErrorMessage")})},createInlineSuccessNote(e){this.createNotificationSuccess({message:this.$t("sw-settings-snippet.setList.inlineEditSuccessMessage",{name:e},0)})},createInlineErrorNote(e){this.createNotificationError({message:this.$t("sw-settings-snippet.setList.inlineEditErrorMessage",{name:e},e!==null)})},createCloneSuccessNote(){this.createNotificationSuccess({message:this.$t("sw-settings-snippet.setList.cloneSuccessMessage")})},createCloneErrorNote(){this.createNotificationError({message:this.$t("sw-settings-snippet.setList.cloneErrorMessage")})},createNotEditableErrorNote(){this.createNotificationError({message:this.$t("sw-settings-snippet.setList.notEditableNoteErrorMessage")})},getNoPermissionsTooltip(e,s=!0){return{showDelay:300,appearance:"dark",showOnDisabledElements:s,disabled:this.acl.can(e),message:this.$t("sw-privileges.tooltip.warning")}}}};export{r as default};
