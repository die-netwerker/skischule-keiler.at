const y=`{% block sw_order_state_history_modal %} <sw-modal :title="$tc('sw-order.stateHistoryModal.modalTitle')" :is-loading="isLoading" variant="large" @modal-close="onClose" > {% block sw_order_state_history_modal_content %} <sw-data-grid :columns="columns" :data-source="dataSource" :is-loading="isLoading || statesLoading" :plain-appearance="true" :show-selection="false" :show-actions="false" > {% block sw_order_state_history_modal_content_columns_created_at %} <template #column-createdAt="{ item }"> <sw-time-ago :date="item.createdAt" :date-time-format="{ month: '2-digit', day: '2-digit' }" /> </template> {% endblock %} {% block sw_order_state_history_modal_content_columns_entity %} <template #column-entity="{ item }"> {{ $tc('global.entities.' + item.entity) }} {{ enumerateTransaction(item) }} </template> {% endblock %} {% block sw_order_state_history_modal_content_columns_user %} <template #column-user="{ item }"> {{ getStateChangeAuthor(item) }} </template> {% endblock %} {% block sw_order_state_history_modal_content_columns_order_state %} <template #column-order="{ item }"> <sw-label :variant="getVariantState('order', item.order)" appearance="badged" > {{ item.order.translated.name }} </sw-label> </template> {% endblock %} {% block sw_order_state_history_modal_content_columns_delivery_state %} <template #column-delivery="{ item }"> <sw-label v-if="item.delivery" :variant="getVariantState('order_delivery', item.delivery)" appearance="badged" > {{ item.delivery.translated.name }} </sw-label> </template> {% endblock %} {% block sw_order_state_history_modal_content_columns_transaction_state %} <template #column-transaction="{ item }"> <sw-label v-if="item.transaction" :variant="getVariantState('order_transaction', item.transaction)" appearance="badged" > {{ item.transaction.translated.name }} </sw-label> </template> {% endblock %} <template #pagination> <sw-pagination :page="page" :limit="limit" :total="total" :steps="steps" @page-change="onPageChange" /> </template> </sw-data-grid> {% endblock %} {% block sw_order_state_history_modal_actions %} <template #modal-footer> {% block sw_order_state_history_modal_action_close %} <mt-button size="small" variant="secondary" @click="onClose" > {{ $tc('global.default.close') }} </mt-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %}`,{Component:g,Mixin:b}=Shopware,{Criteria:n}=Shopware.Data,S=g.wrapComponentConfig({template:y,inject:["repositoryFactory","stateStyleDataProviderService"],mixins:[b.getByName("notification")],props:{order:{type:Object,required:!0},isLoading:{type:Boolean,required:!1,default:!1}},data(){return{dataSource:[],limit:10,page:1,total:0,steps:[5,10,25]}},computed:{stateMachineHistoryRepository(){return this.repositoryFactory.create("state_machine_history")},stateMachineHistoryCriteria(){const t=new n(this.page,this.limit),e=[this.order.id,...(this.order.transactions??[]).map(a=>a.id),...(this.order.deliveries??[]).map(a=>a.id)];return t.addFilter(n.equalsAny("state_machine_history.referencedId",e)),t.addFilter(n.equalsAny("state_machine_history.entityName",["order","order_transaction","order_delivery"])),t.addAssociation("fromStateMachineState"),t.addAssociation("toStateMachineState"),t.addAssociation("user"),t.addAssociation("integration"),t.addSorting({field:"state_machine_history.createdAt",order:"ASC",naturalSorting:!1}),t},columns(){return[{property:"createdAt",label:this.$tc("sw-order.stateHistoryModal.column.createdAt")},{property:"entity",label:this.$tc("sw-order.stateHistoryModal.column.entity")},{property:"user",label:this.$tc("sw-order.stateHistoryModal.column.user")},{property:"transaction",label:this.$tc("sw-order.stateHistoryModal.column.transaction")},{property:"delivery",label:this.$tc("sw-order.stateHistoryModal.column.delivery")},{property:"order",label:this.$tc("sw-order.stateHistoryModal.column.order")}]},hasMultipleTransactions(){var t,e,a;return(((a=(e=(t=this.order)==null?void 0:t.transactions)==null?void 0:e.filter((i,o,s)=>s.indexOf(i)===o))==null?void 0:a.length)??0)>1},statesLoading:{get(){return Shopware.Store.get("swOrderDetail").loading.states},set(t){Shopware.Store.get("swOrderDetail").setLoading(["states",t])}}},created(){this.createdComponent()},methods:{createdComponent(){this.loadHistory()},async loadHistory(){var t,e,a,i;this.statesLoading=!0;try{await this.getStateHistoryEntries()}catch(o){const s=((i=(a=(e=(t=o==null?void 0:o.response)==null?void 0:t.data)==null?void 0:e.errors)==null?void 0:a[0])==null?void 0:i.detail)||"";this.createNotificationError({message:s})}finally{this.statesLoading=!1}},getStateHistoryEntries(){return this.stateMachineHistoryRepository.search(this.stateMachineHistoryCriteria).then(t=>(this.dataSource=this.buildStateHistory(t),this.total=t.total??1,Promise.resolve(t)))},buildStateHistory(t){var s,d,l,c,m,h,u,_,p;const e={order:((s=t.filter(r=>r.entityName==="order")[0])==null?void 0:s.fromStateMachineState)??this.order.stateMachineState,order_transaction:((d=t.filter(r=>r.entityName==="order_transaction")[0])==null?void 0:d.fromStateMachineState)??((c=(l=this.order.transactions)==null?void 0:l.last())==null?void 0:c.stateMachineState),order_delivery:((m=t.filter(r=>r.entityName==="order_delivery")[0])==null?void 0:m.fromStateMachineState)??((u=(h=this.order.deliveries)==null?void 0:h.first())==null?void 0:u.stateMachineState)},a=[];this.page===1&&a.push(this.createEntry(e,this.order));const i=[];t.forEach(r=>{r.entityName==="order_transaction"&&!i.includes(r.referencedId)&&(i.length>0&&a.push(this.createEntry({...e,order_transaction:r.fromStateMachineState},{...r,user:void 0})),i.push(r.referencedId)),e[r.entityName]=r.toStateMachineState,a.push(this.createEntry(e,r))});const o=(_=this.order.transactions)==null?void 0:_.last();return o&&!i.includes(o.id)&&(((p=this.order.transactions)==null?void 0:p.length)??0)>1&&a.push(this.createEntry({...e,order_transaction:o==null?void 0:o.stateMachineState},o)),a},createEntry(t,e){return{order:t.order,transaction:t.order_transaction,delivery:t.order_delivery,createdAt:"orderDateTime"in e?e.orderDateTime:e.createdAt,user:"user"in e?e.user:void 0,integration:"integration"in e?e.integration:void 0,entity:"entityName"in e?e.entityName:e.getEntityName(),referencedId:"referencedId"in e?e.referencedId:e.id}},getVariantState(t,e){return this.stateStyleDataProviderService.getStyle(`${t}.state`,e.technicalName).variant},onClose(){this.$emit("modal-close")},onPageChange({page:t,limit:e}){this.page=t,this.limit=e,this.loadHistory()},enumerateTransaction(t){var a;if(t.entity!=="order_transaction"||!this.hasMultipleTransactions)return"";const e=((a=this.order.transactions)==null?void 0:a.findIndex(i=>i.id===t.referencedId))??-1;return String(e>=0?e+1:"")},getStateChangeAuthor(t){return t.user?t.user.username||t.user.email:t.integration?`${t.integration.label} (${this.$t("sw-order.stateHistoryModal.labelIntegration")})`:this.$t("sw-order.stateHistoryModal.labelSystemUser")}}});export{S as default};
