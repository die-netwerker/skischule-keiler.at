const t=`{% block sw_condition_value_content %} <div class="sw-condition-line-item-goods-total"> {% block sw_condition_line_item_goods_total_field_operator %} <sw-condition-operator-select v-bind="{ operators, condition }" :disabled="disabled || undefined" /> {% endblock %} <div class="sw-condition-line-item-goods-total__value"> {% block sw_condition_line_item_goods_total_field_count %} <mt-number-field v-model="count" name="sw-field--count" class="sw-contidion-line-item-goods-total__numfield" size="medium" number-type="int" :step="1" :disabled="disabled || undefined" /> {% endblock %} {% block sw_condition_line_item_goods_total_filter_button %} <div class="sw-condition-line-item-goods-total__filter"> <mt-button v-tooltip="{ message: $tc('sw-settings-rule.conditionFilter.infoText') }" :disabled="disabled || undefined" variant="secondary" @click="showFilterModal = true" > <mt-icon name="regular-filter-s" size="16px" /> </mt-button> </div> {% endblock %} </div> {% block sw_condition_line_item_goods_total_condition_modal %} <sw-condition-modal v-if="showFilterModal" :disabled="disabled || undefined" v-bind="{ condition, conditionDataProviderService }" @modal-close="showFilterModal = false" /> {% endblock %} </div> {% endblock %}`,{Component:e}=Shopware,{mapPropertyErrors:i}=e.getComponentHelper(),n={template:t,data(){return{showFilterModal:!1}},computed:{operators(){return this.conditionDataProviderService.getOperatorSet("number")},count:{get(){return this.ensureValueExist(),this.condition.value.count},set(o){this.ensureValueExist(),this.condition.value={...this.condition.value,count:o}}},...i("condition",["value.operator","value.count"]),currentError(){return this.conditionValueOperatorError||this.conditionValueCountError}}};export{n as default};
